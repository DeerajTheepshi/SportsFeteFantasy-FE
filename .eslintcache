[{"/home/diprivi/delta/sosaIPL/frontend/src/index.js":"1","/home/diprivi/delta/sosaIPL/frontend/src/serviceWorker.js":"2","/home/diprivi/delta/sosaIPL/frontend/src/components/App.js":"3","/home/diprivi/delta/sosaIPL/frontend/src/context/LayoutContext.js":"4","/home/diprivi/delta/sosaIPL/frontend/src/context/UserContext.js":"5","/home/diprivi/delta/sosaIPL/frontend/src/themes/index.js":"6","/home/diprivi/delta/sosaIPL/frontend/src/apiservice.js":"7","/home/diprivi/delta/sosaIPL/frontend/src/themes/default.js":"8","/home/diprivi/delta/sosaIPL/frontend/src/components/Layout/Layout.js":"9","/home/diprivi/delta/sosaIPL/frontend/src/pages/error/Error.js":"10","/home/diprivi/delta/sosaIPL/frontend/src/pages/login/Login.js":"11","/home/diprivi/delta/sosaIPL/frontend/src/config.js":"12","/home/diprivi/delta/sosaIPL/frontend/src/pages/login/styles.js":"13","/home/diprivi/delta/sosaIPL/frontend/src/pages/error/styles.js":"14","/home/diprivi/delta/sosaIPL/frontend/src/pages/Scoreboard/Scoreboard.js":"15","/home/diprivi/delta/sosaIPL/frontend/src/pages/PickTeam/PickTeam.js":"16","/home/diprivi/delta/sosaIPL/frontend/src/pages/CreateTeam/CreateTeam.js":"17","/home/diprivi/delta/sosaIPL/frontend/src/pages/CreateMatch/CreateMatch.js":"18","/home/diprivi/delta/sosaIPL/frontend/src/pages/Matches/Matches.js":"19","/home/diprivi/delta/sosaIPL/frontend/src/pages/AddPlayer/AddPlayer.js":"20","/home/diprivi/delta/sosaIPL/frontend/src/components/Layout/styles.js":"21","/home/diprivi/delta/sosaIPL/frontend/src/pages/charts/Charts.js":"22","/home/diprivi/delta/sosaIPL/frontend/src/pages/icons/Icons.js":"23","/home/diprivi/delta/sosaIPL/frontend/src/pages/tables/Tables.js":"24","/home/diprivi/delta/sosaIPL/frontend/src/pages/maps/Maps.js":"25","/home/diprivi/delta/sosaIPL/frontend/src/pages/notifications/Notifications.js":"26","/home/diprivi/delta/sosaIPL/frontend/src/pages/typography/Typography.js":"27","/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/Dashboard.js":"28","/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/Sidebar.js":"29","/home/diprivi/delta/sosaIPL/frontend/src/components/Header/Header.js":"30","/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/mock.js":"31","/home/diprivi/delta/sosaIPL/frontend/src/pages/charts/components/ApexHeatmap.js":"32","/home/diprivi/delta/sosaIPL/frontend/src/pages/charts/components/ApexLineChart.js":"33","/home/diprivi/delta/sosaIPL/frontend/src/components/Header/styles.js":"34","/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/styles.js":"35","/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/components/Dot.js":"36","/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"37","/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/components/Table/Table.js":"38","/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/components/BigStat/BigStat.js":"39","/home/diprivi/delta/sosaIPL/frontend/src/pages/typography/styles.js":"40","/home/diprivi/delta/sosaIPL/frontend/src/pages/notifications/styles.js":"41","/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/styles.js":"42","/home/diprivi/delta/sosaIPL/frontend/src/pages/maps/styles.js":"43","/home/diprivi/delta/sosaIPL/frontend/src/components/PageTitle/PageTitle.js":"44","/home/diprivi/delta/sosaIPL/frontend/src/components/Widget/Widget.js":"45","/home/diprivi/delta/sosaIPL/frontend/src/pages/icons/styles.js":"46","/home/diprivi/delta/sosaIPL/frontend/src/components/Wrappers/Wrappers.js":"47","/home/diprivi/delta/sosaIPL/frontend/src/components/UserAvatar/UserAvatar.js":"48","/home/diprivi/delta/sosaIPL/frontend/src/components/Notification/Notification.js":"49","/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/components/SidebarLink/styles.js":"50","/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/components/BigStat/styles.js":"51","/home/diprivi/delta/sosaIPL/frontend/src/components/PageTitle/styles.js":"52","/home/diprivi/delta/sosaIPL/frontend/src/components/Widget/styles.js":"53","/home/diprivi/delta/sosaIPL/frontend/src/components/Notification/styles.js":"54","/home/diprivi/delta/sosaIPL/frontend/src/components/UserAvatar/styles.js":"55"},{"size":871,"mtime":1617630395794,"results":"56","hashOfConfig":"57"},{"size":4948,"mtime":1616852043443,"results":"58","hashOfConfig":"57"},{"size":2563,"mtime":1617629347980,"results":"59","hashOfConfig":"57"},{"size":1392,"mtime":1616997401407,"results":"60","hashOfConfig":"57"},{"size":1977,"mtime":1616997401407,"results":"61","hashOfConfig":"57"},{"size":502,"mtime":1616852043443,"results":"62","hashOfConfig":"57"},{"size":5148,"mtime":1617591578207,"results":"63","hashOfConfig":"57"},{"size":2987,"mtime":1616997938183,"results":"64","hashOfConfig":"57"},{"size":2294,"mtime":1617629688704,"results":"65","hashOfConfig":"57"},{"size":1318,"mtime":1617679928570,"results":"66","hashOfConfig":"57"},{"size":8499,"mtime":1617680528483,"results":"67","hashOfConfig":"57"},{"size":62,"mtime":1617680846300,"results":"68","hashOfConfig":"57"},{"size":3258,"mtime":1617680342737,"results":"69","hashOfConfig":"57"},{"size":1312,"mtime":1617679864973,"results":"70","hashOfConfig":"57"},{"size":5393,"mtime":1617681215060,"results":"71","hashOfConfig":"57"},{"size":9136,"mtime":1617594826980,"results":"72","hashOfConfig":"57"},{"size":9621,"mtime":1617550692347,"results":"73","hashOfConfig":"57"},{"size":9722,"mtime":1617593364130,"results":"74","hashOfConfig":"57"},{"size":13859,"mtime":1617599272764,"results":"75","hashOfConfig":"57"},{"size":3713,"mtime":1616933490707,"results":"76","hashOfConfig":"57"},{"size":680,"mtime":1616852043440,"results":"77","hashOfConfig":"57"},{"size":5556,"mtime":1616997391580,"results":"78","hashOfConfig":"57"},{"size":377833,"mtime":1616852043443,"results":"79","hashOfConfig":"57"},{"size":2082,"mtime":1616997391480,"results":"80","hashOfConfig":"57"},{"size":971,"mtime":1616997391523,"results":"81","hashOfConfig":"57"},{"size":13470,"mtime":1616997391500,"results":"82","hashOfConfig":"57"},{"size":4506,"mtime":1616997391453,"results":"83","hashOfConfig":"57"},{"size":15659,"mtime":1616852043443,"results":"84","hashOfConfig":"57"},{"size":3731,"mtime":1617681170600,"results":"85","hashOfConfig":"57"},{"size":3937,"mtime":1617679724293,"results":"86","hashOfConfig":"57"},{"size":4105,"mtime":1616852043443,"results":"87","hashOfConfig":"57"},{"size":1794,"mtime":1616997391580,"results":"88","hashOfConfig":"57"},{"size":1328,"mtime":1616997391583,"results":"89","hashOfConfig":"57"},{"size":3868,"mtime":1616852043440,"results":"90","hashOfConfig":"57"},{"size":1304,"mtime":1616852043440,"results":"91","hashOfConfig":"57"},{"size":862,"mtime":1616852043440,"results":"92","hashOfConfig":"57"},{"size":3459,"mtime":1616852043440,"results":"93","hashOfConfig":"57"},{"size":1274,"mtime":1616852043443,"results":"94","hashOfConfig":"57"},{"size":4039,"mtime":1616852043443,"results":"95","hashOfConfig":"57"},{"size":374,"mtime":1616997391447,"results":"96","hashOfConfig":"57"},{"size":1858,"mtime":1616997391500,"results":"97","hashOfConfig":"57"},{"size":2870,"mtime":1616852043443,"results":"98","hashOfConfig":"57"},{"size":171,"mtime":1616997391527,"results":"99","hashOfConfig":"57"},{"size":440,"mtime":1616996846403,"results":"100","hashOfConfig":"57"},{"size":2485,"mtime":1616852043440,"results":"101","hashOfConfig":"57"},{"size":780,"mtime":1616852043443,"results":"102","hashOfConfig":"57"},{"size":3790,"mtime":1616997466447,"results":"103","hashOfConfig":"57"},{"size":606,"mtime":1616996891103,"results":"104","hashOfConfig":"57"},{"size":3296,"mtime":1616997481147,"results":"105","hashOfConfig":"57"},{"size":1285,"mtime":1616852043440,"results":"106","hashOfConfig":"57"},{"size":1027,"mtime":1616852043443,"results":"107","hashOfConfig":"57"},{"size":462,"mtime":1616852043440,"results":"108","hashOfConfig":"57"},{"size":969,"mtime":1616852043440,"results":"109","hashOfConfig":"57"},{"size":993,"mtime":1616997481143,"results":"110","hashOfConfig":"57"},{"size":276,"mtime":1616852043440,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"guprjh",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"148","usedDeprecatedRules":"145"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"145"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"154","usedDeprecatedRules":"145"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"145"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},"/home/diprivi/delta/sosaIPL/frontend/src/index.js",["228"],"/home/diprivi/delta/sosaIPL/frontend/src/serviceWorker.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/App.js",["229","230"],"/home/diprivi/delta/sosaIPL/frontend/src/context/LayoutContext.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/context/UserContext.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/themes/index.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/apiservice.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/themes/default.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Layout/Layout.js",["231","232","233","234","235","236","237","238","239","240","241","242","243","244","245"],"/home/diprivi/delta/sosaIPL/frontend/src/pages/error/Error.js",["246"],"/home/diprivi/delta/sosaIPL/frontend/src/pages/login/Login.js",["247","248","249","250","251","252","253"],"/home/diprivi/delta/sosaIPL/frontend/src/config.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/login/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/error/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/Scoreboard/Scoreboard.js",["254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269"],"/home/diprivi/delta/sosaIPL/frontend/src/pages/PickTeam/PickTeam.js",["270","271","272","273","274","275","276","277","278"],"import React, { useEffect, useState } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport APIService from \"../../apiservice\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  formInputs : {\n    display : \"flex\",\n    justifyContent : \"space-around\",\n    alignItems : \"baseline\",\n  },\n  selector : {\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  name : {\n    height : \"80%\",\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  button : {\n    width: \"20%\",\n    margin: \"10px auto\",\n    display: \"flex\"\n  },\n  success : {\n    textAlign: \"center\",\n    color:\"green\"\n  },\n  error : {\n    textAlign: \"center\",\n    color:\"red\"\n  },\n  teamsBox : {\n    width: \"100%\",\n    height: \"420px\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  homeBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  awayBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  table : {\n    overflowY : \"scroll\",\n    minWidth: 275,\n    height: \"50vh\"\n  },\n  matchNo : {\n    display : \"flex\",\n    justifyContent :\"center\",\n    alignItems: \"center\",\n    marginBottom: \"10px\"\n  }\n}));\n\n\nexport function PickTeam (props) {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [home11s, setHome11s] = useState([]);\n  const [userId, setUserId] = useState(\"\");\n  const [matches, setMatches] = useState([]);\n  const [squad, setSquad] = useState([]);\n  const [isLive, setIsLive] = useState(false);\n  const [match, setMatch] = useState({});\n\n  const fetchSquadPlayers = async () => {\n    let res = APIService.getPlayers(props.userData.squad);\n    return res;\n  };\n\n  const fetchNotLiveMatches = async () => {\n    let res = APIService.getAllNotLiveMatches();\n    return res;\n  };\n\n  const fetchLiveStatus = async () => {\n    let res = await APIService.getLiveStatus();\n    return res;\n  };\n\n  const fetchAlreadyPicked = async () => {\n    let res = await APIService.getPickedPlayersForMatch(match._id);\n    return res;\n  };\n\n  useEffect(() => {\n    fetchAlreadyPicked().then(res => {\n      if(res.data.status !== 200) {\n        setError(res.data.message);\n        setTimeout(()=>{setError(\"\")}, 5000);\n        return\n      }\n      let squadIds = res.data.data;\n      let cHome11 = [...home11s];\n      let cSquad = [...squad];\n      for (let i=0;i<cSquad.length;i++) {\n        if(squadIds.includes(cSquad[i]._id)){\n          cSquad[i].selected = 1;\n          cHome11.push(cSquad[i]._id);\n        } else  cSquad[i].selected = 0;\n      }\n      setHome11s(cHome11);\n      setSquad(cSquad);\n    }). catch(e => {\n      setError(\"Something Went Wrong\");\n      setTimeout(()=>{setError(\"\")}, 5000);\n    });\n  }, [match]);\n\n  useEffect(()=>{\n    fetchSquadPlayers().then(res => {\n      if(res.data.status !== 200) {\n        setError(res.data.message);\n        setTimeout(()=>{setError(\"\")}, 5000);\n        return\n      }\n      let data = res.data.data;\n      for (let i=0;i<data.length;i++) {\n        data[i].selected = 0;\n      }\n      setSquad(data);\n    }). catch(e => {\n      setError(\"Something Went Wrong\");\n      setTimeout(()=>{setError(\"\")}, 5000);\n    });\n\n    fetchLiveStatus().then((res) => {\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        return\n      }\n      setIsLive(res.data.data);\n    }).catch(e=>{\n      setError(\"Something Went Wrong\");\n    });\n\n    fetchNotLiveMatches().then((res) => {\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        return\n      }\n      setMatches(res.data.data);\n    }).catch(e=>{\n      setError(\"Something Went Wrong\");\n    });\n  },[]);\n\n  const selectHomePlayer = async (playerId) => {\n    let home11Changed = [...home11s];\n    if(home11Changed.includes(playerId)){\n      home11Changed = home11Changed.filter((value) => {\n        return value !== playerId;\n      })\n    } else {\n      home11Changed.push(playerId);\n    }\n    setHome11s(home11Changed);\n\n\n    let cSquad = [...squad];\n    for (let i=0;i<cSquad.length;i++) {\n      if(home11Changed.includes(cSquad[i]._id)){\n        cSquad[i].selected = 1;\n      } else  cSquad[i].selected = 0;\n    }\n    setSquad(cSquad);\n    console.log(home11s)\n  };\n\n  const setPlayersForMatch = async () => {\n    if(!match._id) {\n      setError(\"No Match Selected\");\n      setTimeout(()=>{setError(\"\")}, 5000);\n      return;\n    }\n    if(home11s.length > 3) {\n      setError(\"You can select only less than 4 Players\");\n      setTimeout(()=>{setError(\"\")}, 5000);\n      return;\n    }\n    let res = await APIService.setPlayersForMatch(home11s, match._id);\n    if(res.data.status !== 200){\n      setError(res.data.message);\n      setTimeout(()=>{setError(\"\")}, 5000);\n      return\n    }\n    setSuccess(res.data.message);\n    setTimeout(()=>{setSuccess(\"\")}, 5000);\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography variant={'h1'} className={classes.title}>\n            Pick Team <br/>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Select Match\"\n              className={classes.selector}\n            >\n              {matches.map((match, key) => {\n                return (\n                  <MenuItem value={match._id} onClick={() => setMatch(match)}>\n                    {match.matchNo + \". \" + match.homeTeam + \" vs \" + match.awayTeam}\n                  </MenuItem>\n                )\n              })}\n\n            </Select>\n          </Typography>\n\n          <br/>\n          {error.length !== 0 &&\n          <Typography variant={'h6'} className={classes.error}>\n            {error}\n          </Typography>\n          }\n          {success.length !== 0 &&\n          <Typography variant={'h6'} className={classes.success} >\n            {success}\n          </Typography>\n          }\n        </CardContent>\n      </Card>\n\n      <br/><br/><br/>\n      {isLive ?\n        <Typography variant={'h3'} className={classes.title}>\n          Cannot Pick Team When Match Is Live\n        </Typography> :\n        <Card className={classes.table}>\n          <CardContent>\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <StyledTableRow>\n                    <StyledTableCell>Player Name</StyledTableCell>\n                    <StyledTableCell>Player Team</StyledTableCell>\n                    <StyledTableCell>Select Player</StyledTableCell>\n                  </StyledTableRow>\n                </TableHead>\n                <TableBody stripedRows>\n                  {squad.map((player) => (\n                    <StyledTableRow key={player.name}>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {player.name}\n                      </StyledTableCell>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {player.teamName}\n                      </StyledTableCell>\n                      <StyledTableCell align=\"center\">\n                        <Checkbox checked={player.selected}\n                          color=\"primary\" onChange={() => selectHomePlayer(player._id)}/>\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </CardContent>\n        </Card>\n      }\n      <Button disabled={isLoading} onClick={setPlayersForMatch} className={classes.button} variant={\"contained\"} color=\"primary\">ADD</Button>}\n    </>\n  )\n}",["279","280"],"/home/diprivi/delta/sosaIPL/frontend/src/pages/CreateTeam/CreateTeam.js",["281","282","283","284","285","286","287"],"import React, { useEffect, useState } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport APIService from \"../../apiservice\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  formInputs : {\n    display : \"flex\",\n    justifyContent : \"space-around\",\n    alignItems : \"baseline\",\n  },\n  selector : {\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  name : {\n    height : \"80%\",\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  button : {\n    width: \"20%\",\n    margin: \"10px auto\",\n    display: \"flex\"\n  },\n  success : {\n    textAlign: \"center\",\n    color:\"green\"\n  },\n  error : {\n    textAlign: \"center\",\n    color:\"red\"\n  },\n  teamsBox : {\n    width: \"100%\",\n    height: \"420px\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  homeBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  awayBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  table : {\n    overflowY : \"scroll\",\n    minWidth: 275,\n    height: \"80vh\"\n  },\n  matchNo : {\n    display : \"flex\",\n    justifyContent :\"center\",\n    alignItems: \"center\",\n    marginBottom: \"10px\"\n  }\n}));\n\n\nexport function CreateTeam () {\n  const classes = useStyles();\n  const [teamName, setTeamName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [home11s, setHome11s] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [roll1, setRoll1] = useState(\"\");\n  const [roll2, setRoll2] = useState(\"\");\n  const [roll3, setRoll3] = useState(\"\");\n\n  useEffect(() => {\n    let data = [...players];\n    for(let i=0;i<data.length;i++){\n      if(home11s.includes(data[i]._id)) {\n        data[i].selected = 1;\n      } else data[i].selected = 0;\n    }\n    setPlayers(data);\n  }, [home11s]);\n\n  const getAllPlayers = async () => {\n    let res = await APIService.getTeamSquad(\"CSK\");\n    return res;\n  };\n\n  const getAllUsers = async () => {\n    let res = await APIService.getAllUsers();\n    return res;\n  };\n\n  const getTeamPlayers = async (teamName) => {\n    let res = await APIService.getTeamSquad(teamName);\n    let data = res.data.data;\n    for(let i=0;i<data.length;i++){\n      if(home11s.includes(data[i]._id)) {\n        data[i].selected = 1;\n      } else data[i].selected = 0;\n    }\n    setPlayers(data);\n  };\n\n  useEffect(()=> {\n    getAllPlayers().then(res => {\n      if(res.data.status !== 200) {\n        setError(res.data.message);\n        setTimeout(()=>{setError(\"\")}, 5000);\n        return\n      }\n      let data = res.data.data;\n      for(let i=0;i<data.length;i++){\n        if(home11s.includes(data[i]._id)) {\n          data[i].selected = 1;\n        } else data[i].selected = 0;\n      }\n      setPlayers(data);\n    }). catch(e => {\n      setError(\"Something Went Wrong\");\n      setTimeout(()=>{setError(\"\")}, 5000);\n    });\n\n    getAllUsers().then(res => {\n      if(res.data.status !== 200) {\n        setError(res.data.message);\n        setTimeout(()=>{setError(\"\")}, 5000);\n        return\n      }\n      setUsers(res.data.data);\n    }). catch(e => {\n      setError(\"Something Went Wrong\");\n      setTimeout(()=>{setError(\"\")}, 5000);\n    })\n  }, [success]);\n\n  const selectHomePlayer = async (playerId) => {\n    let home11Changed = [...home11s];\n    if(home11Changed.includes(playerId)){\n      home11Changed = home11Changed.filter((value) => {\n        return value !== playerId;\n      })\n    } else {\n      home11Changed.push(playerId);\n    }\n    setHome11s(home11Changed);\n  };\n\n  const addTeam = async () => {\n    let res = await APIService.createUsersWithTeam([roll1, roll2, roll3], teamName, home11s);\n    if(res.data.status !== 200){\n      setError(res.data.message);\n      setTimeout(()=>{setError(\"\")}, 5000);\n      return\n    }\n    setSuccess(res.data.message);\n    setTimeout(()=>{setSuccess(\"\")}, 5000);\n  };\n\n\n\n  // const handleAddPlayer = async () => {\n  //   setIsLoading(true);\n  //   try {\n  //     let res = await APIService.addPlayer(playerName, teamName);\n  //     if(res.data.status !== 200){\n  //       setError(res.data.message);\n  //       setIsLoading(false);\n  //       setTimeout(()=>{setError(\"\")}, 5000);\n  //       return\n  //     }\n  //     setSuccess(res.data.message);\n  //     setIsLoading(false);\n  //     setTimeout(()=>{setSuccess(\"\")}, 5000);\n  //   } catch (e) {\n  //     console.log(e);\n  //     setError(\"Something Went Wrong\");\n  //     setTimeout(()=>{setError(\"\")}, 5000);\n  //   }\n  // };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography variant={'h1'} className={classes.title}>\n            Create Team\n          </Typography>\n          <br/>\n          {error.length !== 0 &&\n          <Typography variant={'h6'} className={classes.error}>\n            {error}\n          </Typography>\n          }\n          <div className={classes.formInputs}>\n            <TextField id=\"outlined-basic\" label=\"Roll No 1\"\n                       className={classes.name} onChange={(e)=>{setRoll1(e.target.value)}}/>\n            <TextField id=\"outlined-basic\" label=\"Roll No 2\"\n                       className={classes.name} onChange={(e)=>{setRoll2(e.target.value)}}/>\n            <TextField id=\"outlined-basic\" label=\"Roll No 3\"\n                       className={classes.name} onChange={(e)=>{setRoll3(e.target.value)}}/>\n            <TextField id=\"outlined-basic\" label=\"Team Name\"\n                       className={classes.name} onChange={(e)=>{setTeamName(e.target.value)}}/>\n          </div>\n          {success.length !== 0 &&\n          <Typography variant={'h6'} className={classes.success} >\n            {success}\n          </Typography>\n          }\n        </CardContent>\n      </Card>\n\n      <br/><br/><br/>\n      <Card className={classes.table}>\n        <CardContent>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <StyledTableRow>\n                  <StyledTableCell>Player Name</StyledTableCell>\n                  <StyledTableCell>\n                    Player Team\n                    <Select\n                      labelId=\"demo-simple-select-outlined-label\"\n                      id=\"demo-simple-select-outlined\"\n                      onChange={(e)=>{getTeamPlayers(e.target.value)}}\n                      label=\"Team\"\n                      className={classes.selector}\n                    >\n                      <MenuItem value={\"CSK\"}>CSK</MenuItem>\n                      <MenuItem value={\"RCB\"}>RCB</MenuItem>\n                      <MenuItem value={\"MI\"}>MI</MenuItem>\n                      <MenuItem value={\"KKR\"}>KKR</MenuItem>\n                      <MenuItem value={\"SRH\"}>SRH</MenuItem>\n                      <MenuItem value={\"DC\"}>DC</MenuItem>\n                      <MenuItem value={\"RR\"}>RR</MenuItem>\n                      <MenuItem value={\"KXIP\"}>KXIP</MenuItem>\n                    </Select>\n                  </StyledTableCell>\n                  <StyledTableCell>Select Player</StyledTableCell>\n                </StyledTableRow>\n              </TableHead>\n              <TableBody stripedRows>\n                {players.map((player) => (\n                  <StyledTableRow key={player.name}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      {player.name}\n                    </StyledTableCell>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      {player.teamName}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      <Checkbox\n                        checked={player.selected}\n                        color=\"primary\" onChange={()=>selectHomePlayer(player._id)}/>\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n      <Button disabled={isLoading} onClick={addTeam} className={classes.button} variant={\"contained\"} color=\"primary\">ADD</Button>\n    </>\n  )\n}","/home/diprivi/delta/sosaIPL/frontend/src/pages/CreateMatch/CreateMatch.js",["288","289"],"import React, { useState } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport APIService from \"../../apiservice\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  formInputs : {\n    display : \"flex\",\n    justifyContent : \"space-around\",\n    alignItems : \"baseline\",\n  },\n  selector : {\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  name : {\n    height : \"80%\",\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  button : {\n    width: \"20%\",\n    margin: \"10px auto\",\n    display: \"flex\"\n  },\n  success : {\n    textAlign: \"center\",\n    color:\"green\"\n  },\n  error : {\n    textAlign: \"center\",\n    color:\"red\"\n  },\n  teamsBox : {\n    width: \"100%\",\n    height: \"420px\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  homeBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  awayBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  table : {\n    overflowY : \"scroll\",\n    minWidth: 275,\n  },\n  matchNo : {\n    display : \"flex\",\n    justifyContent :\"center\",\n    alignItems: \"center\",\n    marginBottom: \"10px\"\n  }\n}));\n\n\nexport function AddMatch () {\n  const classes = useStyles();\n  const [homeTeamName, setHomeTeamName] = useState(\"\");\n  const [awayTeamName, setAwayTeamName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [homeSquad, setHomeSquad] = useState([]);\n  const [awaySquad, setAwaySquad] = useState([]);\n  const [away11s, setAway11s] = useState([]);\n  const [home11s, setHome11s] = useState([]);\n  const [matchNo, setMatchNo] = useState(0);\n\n  const handleAwayTeam = async (teamName) => {\n    let res = await APIService.getTeamSquad(teamName);\n    if(res.data.status !== 200) {\n      setError(res.data.message);\n      return\n    }\n    setAwaySquad(res.data.data);\n    setAwayTeamName(teamName);\n  };\n\n  const handleHomeTeam = async (teamName) => {\n    let res = await APIService.getTeamSquad(teamName);\n    if(res.data.status !== 200) {\n      setError(res.data.message);\n      return\n    }\n    setHomeSquad(res.data.data);\n    setHomeTeamName(teamName);\n  };\n\n  const handleCreateMatch = async () => {\n    let res = await APIService.createMatch(homeTeamName, awayTeamName, matchNo, home11s, away11s);\n    if(res.data.status !== 200) {\n      setError(res.data.message);\n      return\n    }\n    setSuccess(res.data.message);\n  };\n\n  const selectAwayPlayer = async (playerId) => {\n    let away11Changed = [...away11s];\n    if(away11Changed.includes(playerId)){\n      away11Changed = away11Changed.filter((value) => {\n        return value !== playerId;\n      })\n    } else {\n      away11Changed.push(playerId);\n    }\n    setAway11s(away11Changed);\n  };\n\n  const selectHomePlayer = async (playerId) => {\n    let home11Changed = [...home11s];\n    if(home11Changed.includes(playerId)){\n      home11Changed = home11Changed.filter((value) => {\n        return value !== playerId;\n      })\n    } else {\n      home11Changed.push(playerId);\n    }\n    setHome11s(home11Changed);\n  };\n\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography variant={'h1'} className={classes.title}>\n            Create Match\n          </Typography>\n          <br/>\n          {error.length !== 0 &&\n          <Typography variant={'h6'} className={classes.error}>\n            {error}\n          </Typography>\n          }\n          <div className={classes.matchNo}>\n          <TextField id=\"outlined-basic\" label=\"Match No\"\n                     className={classes.name} onChange={(e)=>{setMatchNo(e.target.value)}}/>\n          </div>\n          <div className={classes.formInputs}>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              onChange={(e)=>{handleHomeTeam(e.target.value)}}\n              label=\"Home Team\"\n              className={classes.selector}\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={\"CSK\"}>CSK</MenuItem>\n              <MenuItem value={\"RCB\"}>RCB</MenuItem>\n              <MenuItem value={\"MI\"}>MI</MenuItem>\n              <MenuItem value={\"KKR\"}>KKR</MenuItem>\n              <MenuItem value={\"SRH\"}>SRH</MenuItem>\n              <MenuItem value={\"DC\"}>DC</MenuItem>\n              <MenuItem value={\"RR\"}>RR</MenuItem>\n              <MenuItem value={\"KXIP\"}>KXIP</MenuItem>\n            </Select>\n\n            <Typography variant={'h1'} className={classes.title}>\n              V S\n            </Typography>\n\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              onChange={(e)=>{handleAwayTeam(e.target.value)}}\n              label=\"Away Team\"\n              className={classes.selector}\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={\"CSK\"}>CSK</MenuItem>\n              <MenuItem value={\"RCB\"}>RCB</MenuItem>\n              <MenuItem value={\"MI\"}>MI</MenuItem>\n              <MenuItem value={\"KKR\"}>KKR</MenuItem>\n              <MenuItem value={\"SRH\"}>SRH</MenuItem>\n              <MenuItem value={\"DC\"}>DC</MenuItem>\n              <MenuItem value={\"RR\"}>RR</MenuItem>\n              <MenuItem value={\"KXIP\"}>KXIP</MenuItem>\n            </Select>\n          </div>\n          {success.length !== 0 &&\n          <Typography variant={'h6'} className={classes.success} >\n            {success}\n          </Typography>\n          }\n        </CardContent>\n      </Card>\n\n      <br/><br/><br/>\n      <Card className={classes.table}>\n        <CardContent>\n          <div className={classes.teamsBox}>\n            <div className={classes.homeBox}>\n              <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                  <TableHead>\n                    <StyledTableRow>\n                      <StyledTableCell>Player Name</StyledTableCell>\n                      <StyledTableCell>Total Points</StyledTableCell>\n                    </StyledTableRow>\n                  </TableHead>\n                  <TableBody stripedRows>\n                    {homeSquad.map((player) => (\n                      <StyledTableRow key={player.name}>\n                        <StyledTableCell component=\"th\" scope=\"row\">\n                          {player.name}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                          <Checkbox\n                            color=\"primary\" onChange={()=>selectHomePlayer(player._id)}/>\n                        </StyledTableCell>\n                      </StyledTableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </div>\n\n            <div className={classes.awayBox}>\n              <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                  <TableHead>\n                    <StyledTableRow>\n                      <StyledTableCell>Player Name</StyledTableCell>\n                      <StyledTableCell>Total Points</StyledTableCell>\n                    </StyledTableRow>\n                  </TableHead>\n                  <TableBody stripedRows>\n                    {awaySquad.map((player) => (\n                      <StyledTableRow key={player.name}>\n                        <StyledTableCell component=\"th\" scope=\"row\">\n                          {player.name}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                          <Checkbox\n                            color=\"primary\" onChange={()=>selectAwayPlayer(player._id)}/>\n                        </StyledTableCell>\n                      </StyledTableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n      <Button disabled={isLoading} onClick={handleCreateMatch} className={classes.button} variant={\"contained\"} color=\"primary\">ADD</Button>\n    </>\n  )\n}","/home/diprivi/delta/sosaIPL/frontend/src/pages/Matches/Matches.js",["290","291","292","293","294","295","296"],"import React, { useEffect, useState } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport APIService from \"../../apiservice\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  formInputs : {\n    display : \"flex\",\n    justifyContent : \"space-around\",\n    alignItems : \"baseline\",\n  },\n  selector : {\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  name : {\n    height : \"80%\",\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  button : {\n    width: \"20%\",\n    margin: \"10px auto\",\n    display: \"flex\"\n  },\n  success : {\n    textAlign: \"center\",\n    color:\"green\"\n  },\n  error : {\n    textAlign: \"center\",\n    color:\"red\"\n  },\n  teamsBox : {\n    width: \"100%\",\n    height: \"420px\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  homeBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  awayBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  table : {\n    overflowY : \"scroll\",\n    minWidth: 275,\n  },\n  matchNo : {\n    display : \"flex\",\n    justifyContent :\"center\",\n    alignItems: \"center\",\n    marginBottom: \"10px\"\n  }\n}));\n\n\nexport function Matches () {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [matches, setMatches] = useState([]);\n  const [success, setSuccess] = useState(\"\");\n  const [isScoring, setIsScoring] = useState(false);\n  const [match, setMatch] = useState({});\n  const [home11s, setHome11s] = useState([]);\n  const [away11s, setAway11s] = useState([]);\n  const [isLive, setIsLive] = useState(false);\n  let homePts = [0,0,0,0,0,0,0,0,0,0,0];\n  let awayPts = [0,0,0,0,0,0,0,0,0,0,0];\n\n  const fetchMatches = async () => {\n    let res = await APIService.getAllMatches();\n    return res;\n  };\n\n  const fetchLiveStatus = async () => {\n    let res = await APIService.getLiveStatus();\n    return res;\n  };\n\n  useEffect(() => {\n    fetchMatches().then((res) => {\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        return\n      }\n      setMatches(res.data.matches);\n    }).catch(e=>{\n      setError(\"Something Went Wrong\");\n    });\n\n    fetchLiveStatus().then((res) => {\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        return\n      }\n      setIsLive(res.data.data);\n    }).catch(e=>{\n      setError(\"Something Went Wrong\");\n    });\n\n\n\n  }, [isScoring]);\n\n  const toggleLive = async (match) => {\n    let res = await APIService.toggleLive(match._id);\n    if(res.data.status !== 200){\n      setError(res.data.message);\n      setTimeout(()=>{setError(\"\")}, 5000);\n      return\n    }\n    setSuccess(res.data.message);\n\n    fetchMatches().then((res) => {\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        return\n      }\n      setMatches(res.data.matches);\n    }).catch(e=>{\n      setError(\"Something Went Wrong\");\n    });\n    setTimeout(()=>{setSuccess(\"\")}, 5000);\n  };\n\n  const gotToScoring = async (match) => {\n    let res = await APIService.getPlayers(match.homeEleven);\n    if(res.data.status!==200) {\n      setError(res.data.message);\n      setTimeout(()=>{setError(\"\")}, 5000);\n      return\n    }\n    setHome11s(res.data.data);\n\n    res = await APIService.getPlayers(match.awayEleven);\n    if(res.data.status!==200) {\n      setError(res.data.message);\n      setTimeout(()=>{setError(\"\")}, 5000);\n      return\n    }\n    setIsScoring(true);\n    setAway11s(res.data.data);\n    setMatch(match);\n  };\n\n  const simulate = async (match) => {\n    let res = await APIService.simulate(match._id);\n    if (res.data.status !== 200) {\n      setError(res.data.message);\n      setTimeout(()=>{setError(\"\")}, 5000);\n      return\n    }\n    setSuccess(res.data.message);\n\n    fetchMatches().then((res) => {\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        return\n      }\n      setMatches(res.data.matches);\n    }).catch(e=>{\n      setError(\"Something Went Wrong\");\n    });\n\n    setTimeout(()=>{setSuccess(\"\")}, 5000);\n  };\n\n  const undoSimulate = async (match) => {\n    let res = await APIService.undoSimulate(match._id);\n    if (res.data.status !== 200) {\n      setError(res.data.message);\n      setTimeout(()=>{setError(\"\")}, 5000);\n      return\n    }\n    setSuccess(res.data.message);\n\n    fetchMatches().then((res) => {\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        return\n      }\n      setMatches(res.data.matches);\n    }).catch(e=>{\n      setError(\"Something Went Wrong\");\n    });\n\n    setTimeout(()=>{setSuccess(\"\")}, 5000);\n  };\n\n  const addScoreForMatch = async () => {\n    let players = [... home11s, ...away11s];\n    let pts = [...homePts, ...awayPts];\n    let res = await APIService.updateMatchScores(match._id, players, pts);\n    if (res.data.status !== 200) {\n      setError(res.data.message);\n      setTimeout(()=>{setError(\"\")}, 5000);\n      return\n    }\n    setSuccess(res.data.message);\n    setIsScoring(false);\n    setTimeout(()=>{setSuccess(\"\")}, 5000);\n  };\n\n\n  return (\n    !isScoring ?\n      <>\n        <Card className={classes.table}>\n          <CardContent>\n            <Typography variant={'h1'} className={classes.title}>\n              Matches\n            </Typography>\n            <br/>\n            {error.length !== 0 &&\n            <Typography variant={'h6'} className={classes.error}>\n              {error}\n            </Typography>\n            }\n\n            {success.length !== 0 &&\n            <Typography variant={'h6'} className={classes.success} >\n              {success}\n            </Typography>\n            }\n\n            <br/><br/><br/>\n\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <StyledTableRow>\n                    <StyledTableCell>MatchNo</StyledTableCell>\n                    <StyledTableCell>Home</StyledTableCell>\n                    <StyledTableCell>Away</StyledTableCell>\n                    <StyledTableCell>SetLive</StyledTableCell>\n                    <StyledTableCell>AddScore</StyledTableCell>\n                    <StyledTableCell>Simulate</StyledTableCell>\n\n                  </StyledTableRow>\n                </TableHead>\n                <TableBody stripedRows>\n                  {matches.map((match) => (\n                    <StyledTableRow key={match.match._id}>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {match.match.matchNo}\n                      </StyledTableCell>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {match.match.homeTeam}\n                      </StyledTableCell>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {match.match.awayTeam}\n                      </StyledTableCell>\n                      <StyledTableCell align=\"center\">\n                        <Switch\n                          checked={match.match.isLive}\n                          onChange={()=>toggleLive(match.match)}\n                          color=\"primary\"\n                        />\n                      </StyledTableCell>\n                      <StyledTableCell align=\"center\">\n                        <Button disabled={!match.match.isLive || match.match.isSimulated} variant={\"contained\"}\n                                onClick={()=>gotToScoring(match.match)} color=\"primary\">\n                          {match.scored && \"Edit Scores\" }\n                          {!match.scored && \"Add Scores\"}\n                        </Button>\n                      </StyledTableCell>\n                      <StyledTableCell align=\"center\">\n                        <Button disabled={!match.scored} variant={\"contained\"}\n                                onClick={ !match.match.isSimulated ?\n                                  ()=>simulate(match.match) : () => undoSimulate(match.match)\n                                } color=\"primary\">\n                          {!match.match.isSimulated && \"Simulate\"}\n                          {match.match.isSimulated && \"Undo Simulation\"}\n                        </Button>\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </CardContent>\n        </Card>\n      </> :\n      <>\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography variant={'h1'} className={classes.title}>\n              ScoreCard for Match No {match.matchNo}\n            </Typography>\n            <br/>\n            {error.length !== 0 &&\n            <Typography variant={'h6'} className={classes.error}>\n              {error}\n            </Typography>\n            }\n            <div className={classes.formInputs}>\n              <Typography variant={'h1'} className={classes.title}>\n                {match.homeTeam}\n              </Typography>\n              <Typography variant={'h1'} className={classes.title}>\n                V S\n              </Typography>\n              <Typography variant={'h1'} className={classes.title}>\n                {match.awayTeam}\n              </Typography>\n            </div>\n            {success.length !== 0 &&\n            <Typography variant={'h6'} className={classes.success} >\n              {success}\n            </Typography>\n            }\n          </CardContent>\n        </Card>\n\n        <br/><br/><br/>\n        <Card className={classes.table}>\n          <CardContent>\n            <div className={classes.teamsBox}>\n              <div className={classes.homeBox}>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <StyledTableRow>\n                        <StyledTableCell>Player Name</StyledTableCell>\n                        <StyledTableCell>Points</StyledTableCell>\n                      </StyledTableRow>\n                    </TableHead>\n                    <TableBody stripedRows>\n                      {home11s.map((player,key) => (\n                        <StyledTableRow key={player.name}>\n                          <StyledTableCell component=\"th\" scope=\"row\">\n                            {player.name}\n                          </StyledTableCell>\n                          <StyledTableCell align=\"center\">\n                            <TextField id=\"outlined-basic\" label=\"Points\"\n                                       onChange = {e=>{homePts[key] = e.target.value;}}\n                                       className={classes.name}/>\n                          </StyledTableCell>\n                        </StyledTableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </div>\n\n              <div className={classes.awayBox}>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <StyledTableRow>\n                        <StyledTableCell>Player Name</StyledTableCell>\n                        <StyledTableCell>Total Points</StyledTableCell>\n                      </StyledTableRow>\n                    </TableHead>\n                    <TableBody stripedRows>\n                      {away11s.map((player, key) => (\n                        <StyledTableRow key={player.name}>\n                          <StyledTableCell component=\"th\" scope=\"row\">\n                            {player.name}\n                          </StyledTableCell>\n                          <StyledTableCell align=\"center\">\n                            <TextField id=\"outlined-basic\" label=\"Points\"\n                                       onChange = {e=>{awayPts[key] = e.target.value;}}\n                                       className={classes.name}/>\n                          </StyledTableCell>\n                        </StyledTableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        <Button disabled={isLoading} onClick={() => addScoreForMatch()} className={classes.button} variant={\"contained\"} color=\"primary\">ADD</Button>\n\n      </>\n  )}\n\n","/home/diprivi/delta/sosaIPL/frontend/src/pages/AddPlayer/AddPlayer.js",["297"],"import React, { useState } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport APIService from \"../../apiservice\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  formInputs : {\n    display : \"flex\",\n    justifyContent : \"space-around\",\n    alignItems : \"baseline\",\n  },\n  selector : {\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  name : {\n    height : \"80%\",\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  button : {\n    marginLeft: \"10px !important\"\n  },\n  success : {\n    textAlign: \"center\",\n    color:\"green\"\n  },\n  error : {\n    textAlign: \"center\",\n    color:\"red\"\n  }\n}));\n\n\nexport function AddPlayer () {\n  const classes = useStyles();\n  const [playerName, setPlayerName] = useState(\"\");\n  const [teamName, setTeamName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const handleAddPlayer = async () => {\n    setIsLoading(true);\n    try {\n      let res = await APIService.addPlayer(playerName, teamName);\n      if(res.data.status !== 200){\n        setError(res.data.message);\n        setIsLoading(false);\n        setTimeout(()=>{setError(\"\")}, 5000);\n        return\n      }\n      setSuccess(res.data.message);\n      setIsLoading(false);\n      setTimeout(()=>{setSuccess(\"\")}, 5000);\n    } catch (e) {\n      console.log(e);\n      setError(\"Something Went Wrong\");\n      setTimeout(()=>{setError(\"\")}, 5000);\n    }\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant={'h1'} className={classes.title}>\n          Add Player\n        </Typography>\n        <br/>\n        {error.length !== 0 &&\n        <Typography variant={'h6'} className={classes.error}>\n          {error}\n        </Typography>\n        }\n        <div className={classes.formInputs}>\n          <TextField id=\"outlined-basic\" label=\"Player Name\"\n          className={classes.name} onChange={(e)=>{setPlayerName(e.target.value)}}/>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            onChange={(e)=>{setTeamName(e.target.value)}}\n            label=\"Team Name\"\n            className={classes.selector}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={\"CSK\"}>CSK</MenuItem>\n            <MenuItem value={\"RCB\"}>RCB</MenuItem>\n            <MenuItem value={\"MI\"}>MI</MenuItem>\n            <MenuItem value={\"KKR\"}>KKR</MenuItem>\n            <MenuItem value={\"SRH\"}>SRH</MenuItem>\n            <MenuItem value={\"DC\"}>DC</MenuItem>\n            <MenuItem value={\"RR\"}>RR</MenuItem>\n            <MenuItem value={\"KXIP\"}>KXIP</MenuItem>\n          </Select>\n          <Button disabled={isLoading} onClick={handleAddPlayer} className={\"button\"} variant={\"contained\"} color=\"primary\">ADD</Button>\n        </div>\n        {success.length !== 0 &&\n        <Typography variant={'h6'} className={classes.success} >\n          {success}\n        </Typography>\n        }\n      </CardContent>\n    </Card>\n  )\n}","/home/diprivi/delta/sosaIPL/frontend/src/components/Layout/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/charts/Charts.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/icons/Icons.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/tables/Tables.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/maps/Maps.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/notifications/Notifications.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/typography/Typography.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/Dashboard.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/Sidebar.js",["298","299","300","301","302","303","304","305","306"],"/home/diprivi/delta/sosaIPL/frontend/src/components/Header/Header.js",["307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337"],"/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/mock.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/charts/components/ApexHeatmap.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/charts/components/ApexLineChart.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Header/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/components/Dot.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/components/Table/Table.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/components/BigStat/BigStat.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/typography/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/notifications/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/maps/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/PageTitle/PageTitle.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Widget/Widget.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/icons/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Wrappers/Wrappers.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/UserAvatar/UserAvatar.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Notification/Notification.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/components/SidebarLink/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/components/BigStat/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/PageTitle/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Widget/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Notification/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/UserAvatar/styles.js",[],{"ruleId":"338","severity":1,"message":"339","line":8,"column":13,"nodeType":"340","messageId":"341","endLine":8,"endColumn":26},{"ruleId":"338","severity":1,"message":"342","line":31,"column":9,"nodeType":"340","messageId":"341","endLine":31,"endColumn":12},{"ruleId":"343","severity":1,"message":"344","line":44,"column":6,"nodeType":"345","endLine":44,"endColumn":8,"suggestions":"346"},{"ruleId":"338","severity":1,"message":"347","line":5,"column":3,"nodeType":"340","messageId":"341","endLine":5,"endColumn":11},{"ruleId":"338","severity":1,"message":"348","line":9,"column":9,"nodeType":"340","messageId":"341","endLine":9,"endColumn":12},{"ruleId":"338","severity":1,"message":"349","line":9,"column":14,"nodeType":"340","messageId":"341","endLine":9,"endColumn":24},{"ruleId":"338","severity":1,"message":"350","line":9,"column":26,"nodeType":"340","messageId":"341","endLine":9,"endColumn":30},{"ruleId":"338","severity":1,"message":"351","line":10,"column":8,"nodeType":"340","messageId":"341","endLine":10,"endColumn":12},{"ruleId":"338","severity":1,"message":"352","line":14,"column":18,"nodeType":"340","messageId":"341","endLine":14,"endColumn":30},{"ruleId":"338","severity":1,"message":"353","line":15,"column":17,"nodeType":"340","messageId":"341","endLine":15,"endColumn":28},{"ruleId":"338","severity":1,"message":"354","line":16,"column":16,"nodeType":"340","messageId":"341","endLine":16,"endColumn":26},{"ruleId":"338","severity":1,"message":"355","line":27,"column":8,"nodeType":"340","messageId":"341","endLine":27,"endColumn":17},{"ruleId":"338","severity":1,"message":"356","line":28,"column":8,"nodeType":"340","messageId":"341","endLine":28,"endColumn":18},{"ruleId":"338","severity":1,"message":"357","line":29,"column":8,"nodeType":"340","messageId":"341","endLine":29,"endColumn":21},{"ruleId":"338","severity":1,"message":"358","line":30,"column":8,"nodeType":"340","messageId":"341","endLine":30,"endColumn":12},{"ruleId":"338","severity":1,"message":"359","line":31,"column":8,"nodeType":"340","messageId":"341","endLine":31,"endColumn":14},{"ruleId":"338","severity":1,"message":"360","line":32,"column":8,"nodeType":"340","messageId":"341","endLine":32,"endColumn":13},{"ruleId":"338","severity":1,"message":"361","line":33,"column":8,"nodeType":"340","messageId":"341","endLine":33,"endColumn":14},{"ruleId":"338","severity":1,"message":"362","line":10,"column":8,"nodeType":"340","messageId":"341","endLine":10,"endColumn":12},{"ruleId":"338","severity":1,"message":"347","line":12,"column":10,"nodeType":"340","messageId":"341","endLine":12,"endColumn":18},{"ruleId":"338","severity":1,"message":"363","line":13,"column":8,"nodeType":"340","messageId":"341","endLine":13,"endColumn":18},{"ruleId":"338","severity":1,"message":"362","line":19,"column":8,"nodeType":"340","messageId":"341","endLine":19,"endColumn":12},{"ruleId":"338","severity":1,"message":"364","line":20,"column":8,"nodeType":"340","messageId":"341","endLine":20,"endColumn":14},{"ruleId":"338","severity":1,"message":"365","line":25,"column":8,"nodeType":"340","messageId":"341","endLine":25,"endColumn":18},{"ruleId":"338","severity":1,"message":"366","line":26,"column":10,"nodeType":"340","messageId":"341","endLine":26,"endColumn":20},{"ruleId":"338","severity":1,"message":"367","line":45,"column":10,"nodeType":"340","messageId":"341","endLine":45,"endColumn":20},{"ruleId":"338","severity":1,"message":"368","line":4,"column":8,"nodeType":"340","messageId":"341","endLine":4,"endColumn":19},{"ruleId":"338","severity":1,"message":"369","line":7,"column":8,"nodeType":"340","messageId":"341","endLine":7,"endColumn":14},{"ruleId":"338","severity":1,"message":"370","line":8,"column":8,"nodeType":"340","messageId":"341","endLine":8,"endColumn":17},{"ruleId":"338","severity":1,"message":"371","line":9,"column":8,"nodeType":"340","messageId":"341","endLine":9,"endColumn":14},{"ruleId":"338","severity":1,"message":"372","line":10,"column":8,"nodeType":"340","messageId":"341","endLine":10,"endColumn":16},{"ruleId":"338","severity":1,"message":"373","line":20,"column":8,"nodeType":"340","messageId":"341","endLine":20,"endColumn":16},{"ruleId":"338","severity":1,"message":"374","line":117,"column":10,"nodeType":"340","messageId":"341","endLine":117,"endColumn":19},{"ruleId":"338","severity":1,"message":"375","line":117,"column":21,"nodeType":"340","messageId":"341","endLine":117,"endColumn":33},{"ruleId":"338","severity":1,"message":"376","line":119,"column":19,"nodeType":"340","messageId":"341","endLine":119,"endColumn":29},{"ruleId":"338","severity":1,"message":"377","line":120,"column":10,"nodeType":"340","messageId":"341","endLine":120,"endColumn":17},{"ruleId":"338","severity":1,"message":"378","line":120,"column":19,"nodeType":"340","messageId":"341","endLine":120,"endColumn":29},{"ruleId":"338","severity":1,"message":"379","line":121,"column":10,"nodeType":"340","messageId":"341","endLine":121,"endColumn":16},{"ruleId":"338","severity":1,"message":"380","line":121,"column":18,"nodeType":"340","messageId":"341","endLine":121,"endColumn":27},{"ruleId":"338","severity":1,"message":"381","line":122,"column":10,"nodeType":"340","messageId":"341","endLine":122,"endColumn":17},{"ruleId":"338","severity":1,"message":"382","line":122,"column":19,"nodeType":"340","messageId":"341","endLine":122,"endColumn":29},{"ruleId":"383","severity":1,"message":"384","line":138,"column":5,"nodeType":"385","messageId":"386","endLine":146,"endColumn":14,"fix":"387"},{"ruleId":"338","severity":1,"message":"368","line":4,"column":8,"nodeType":"340","messageId":"341","endLine":4,"endColumn":19},{"ruleId":"338","severity":1,"message":"370","line":8,"column":8,"nodeType":"340","messageId":"341","endLine":8,"endColumn":17},{"ruleId":"338","severity":1,"message":"375","line":114,"column":21,"nodeType":"340","messageId":"341","endLine":114,"endColumn":33},{"ruleId":"338","severity":1,"message":"379","line":118,"column":10,"nodeType":"340","messageId":"341","endLine":118,"endColumn":16},{"ruleId":"338","severity":1,"message":"380","line":118,"column":18,"nodeType":"340","messageId":"341","endLine":118,"endColumn":27},{"ruleId":"383","severity":1,"message":"384","line":145,"column":5,"nodeType":"385","messageId":"386","endLine":162,"endColumn":14,"fix":"388"},{"ruleId":"343","severity":1,"message":"389","line":166,"column":6,"nodeType":"345","endLine":166,"endColumn":13,"suggestions":"390"},{"ruleId":"383","severity":1,"message":"384","line":169,"column":5,"nodeType":"385","messageId":"386","endLine":180,"endColumn":14,"fix":"391"},{"ruleId":"343","severity":1,"message":"392","line":204,"column":5,"nodeType":"345","endLine":204,"endColumn":7,"suggestions":"393"},{"ruleId":"394","replacedBy":"395"},{"ruleId":"396","replacedBy":"397"},{"ruleId":"338","severity":1,"message":"368","line":4,"column":8,"nodeType":"340","messageId":"341","endLine":4,"endColumn":19},{"ruleId":"338","severity":1,"message":"375","line":115,"column":21,"nodeType":"340","messageId":"341","endLine":115,"endColumn":33},{"ruleId":"338","severity":1,"message":"398","line":119,"column":10,"nodeType":"340","messageId":"341","endLine":119,"endColumn":15},{"ruleId":"343","severity":1,"message":"399","line":133,"column":6,"nodeType":"345","endLine":133,"endColumn":15,"suggestions":"400"},{"ruleId":"383","severity":1,"message":"384","line":157,"column":5,"nodeType":"385","messageId":"386","endLine":170,"endColumn":14,"fix":"401"},{"ruleId":"383","severity":1,"message":"384","line":175,"column":5,"nodeType":"385","messageId":"386","endLine":182,"endColumn":14,"fix":"402"},{"ruleId":"343","severity":1,"message":"403","line":186,"column":6,"nodeType":"345","endLine":186,"endColumn":15,"suggestions":"404"},{"ruleId":"338","severity":1,"message":"368","line":4,"column":8,"nodeType":"340","messageId":"341","endLine":4,"endColumn":19},{"ruleId":"338","severity":1,"message":"375","line":115,"column":21,"nodeType":"340","messageId":"341","endLine":115,"endColumn":33},{"ruleId":"338","severity":1,"message":"368","line":4,"column":8,"nodeType":"340","messageId":"341","endLine":4,"endColumn":19},{"ruleId":"338","severity":1,"message":"371","line":9,"column":8,"nodeType":"340","messageId":"341","endLine":9,"endColumn":14},{"ruleId":"338","severity":1,"message":"372","line":10,"column":8,"nodeType":"340","messageId":"341","endLine":10,"endColumn":16},{"ruleId":"338","severity":1,"message":"373","line":20,"column":8,"nodeType":"340","messageId":"341","endLine":20,"endColumn":16},{"ruleId":"338","severity":1,"message":"375","line":114,"column":21,"nodeType":"340","messageId":"341","endLine":114,"endColumn":33},{"ruleId":"338","severity":1,"message":"405","line":122,"column":10,"nodeType":"340","messageId":"341","endLine":122,"endColumn":16},{"ruleId":"406","severity":1,"message":"407","line":247,"column":23,"nodeType":"408","messageId":"386","endLine":247,"endColumn":24,"fix":"409"},{"ruleId":"338","severity":1,"message":"368","line":4,"column":8,"nodeType":"340","messageId":"341","endLine":4,"endColumn":19},{"ruleId":"338","severity":1,"message":"410","line":4,"column":11,"nodeType":"340","messageId":"341","endLine":4,"endColumn":19},{"ruleId":"338","severity":1,"message":"411","line":5,"column":24,"nodeType":"340","messageId":"341","endLine":5,"endColumn":41},{"ruleId":"338","severity":1,"message":"412","line":6,"column":17,"nodeType":"340","messageId":"341","endLine":6,"endColumn":31},{"ruleId":"338","severity":1,"message":"413","line":7,"column":17,"nodeType":"340","messageId":"341","endLine":7,"endColumn":31},{"ruleId":"338","severity":1,"message":"414","line":8,"column":16,"nodeType":"340","messageId":"341","endLine":8,"endColumn":25},{"ruleId":"338","severity":1,"message":"415","line":9,"column":21,"nodeType":"340","messageId":"341","endLine":9,"endColumn":32},{"ruleId":"338","severity":1,"message":"416","line":10,"column":19,"nodeType":"340","messageId":"341","endLine":10,"endColumn":30},{"ruleId":"338","severity":1,"message":"417","line":11,"column":18,"nodeType":"340","messageId":"341","endLine":11,"endColumn":25},{"ruleId":"338","severity":1,"message":"418","line":23,"column":8,"nodeType":"340","messageId":"341","endLine":23,"endColumn":11},{"ruleId":"338","severity":1,"message":"419","line":6,"column":3,"nodeType":"340","messageId":"341","endLine":6,"endColumn":12},{"ruleId":"338","severity":1,"message":"420","line":7,"column":3,"nodeType":"340","messageId":"341","endLine":7,"endColumn":7},{"ruleId":"338","severity":1,"message":"372","line":8,"column":3,"nodeType":"340","messageId":"341","endLine":8,"endColumn":11},{"ruleId":"338","severity":1,"message":"421","line":9,"column":3,"nodeType":"340","messageId":"341","endLine":9,"endColumn":6},{"ruleId":"338","severity":1,"message":"350","line":10,"column":3,"nodeType":"340","messageId":"341","endLine":10,"endColumn":7},{"ruleId":"338","severity":1,"message":"422","line":14,"column":18,"nodeType":"340","messageId":"341","endLine":14,"endColumn":26},{"ruleId":"338","severity":1,"message":"411","line":15,"column":24,"nodeType":"340","messageId":"341","endLine":15,"endColumn":41},{"ruleId":"338","severity":1,"message":"423","line":16,"column":13,"nodeType":"340","messageId":"341","endLine":16,"endColumn":24},{"ruleId":"338","severity":1,"message":"424","line":17,"column":13,"nodeType":"340","messageId":"341","endLine":17,"endColumn":23},{"ruleId":"338","severity":1,"message":"425","line":18,"column":11,"nodeType":"340","messageId":"341","endLine":18,"endColumn":19},{"ruleId":"338","severity":1,"message":"426","line":27,"column":10,"nodeType":"340","messageId":"341","endLine":27,"endColumn":15},{"ruleId":"338","severity":1,"message":"369","line":27,"column":29,"nodeType":"340","messageId":"341","endLine":27,"endColumn":35},{"ruleId":"338","severity":1,"message":"427","line":28,"column":8,"nodeType":"340","messageId":"341","endLine":28,"endColumn":20},{"ruleId":"338","severity":1,"message":"428","line":29,"column":8,"nodeType":"340","messageId":"341","endLine":29,"endColumn":18},{"ruleId":"338","severity":1,"message":"429","line":38,"column":27,"nodeType":"340","messageId":"341","endLine":38,"endColumn":34},{"ruleId":"338","severity":1,"message":"430","line":40,"column":7,"nodeType":"340","messageId":"341","endLine":40,"endColumn":15},{"ruleId":"338","severity":1,"message":"431","line":71,"column":7,"nodeType":"340","messageId":"341","endLine":71,"endColumn":20},{"ruleId":"338","severity":1,"message":"432","line":95,"column":7,"nodeType":"340","messageId":"341","endLine":95,"endColumn":14},{"ruleId":"338","severity":1,"message":"433","line":100,"column":7,"nodeType":"340","messageId":"341","endLine":100,"endColumn":19},{"ruleId":"338","severity":1,"message":"434","line":103,"column":8,"nodeType":"340","messageId":"341","endLine":103,"endColumn":16},{"ruleId":"338","severity":1,"message":"435","line":103,"column":18,"nodeType":"340","messageId":"341","endLine":103,"endColumn":29},{"ruleId":"338","severity":1,"message":"436","line":104,"column":8,"nodeType":"340","messageId":"341","endLine":104,"endColumn":21},{"ruleId":"338","severity":1,"message":"437","line":104,"column":23,"nodeType":"340","messageId":"341","endLine":104,"endColumn":39},{"ruleId":"338","severity":1,"message":"438","line":105,"column":8,"nodeType":"340","messageId":"341","endLine":105,"endColumn":25},{"ruleId":"338","severity":1,"message":"439","line":105,"column":27,"nodeType":"340","messageId":"341","endLine":105,"endColumn":47},{"ruleId":"338","severity":1,"message":"440","line":106,"column":8,"nodeType":"340","messageId":"341","endLine":106,"endColumn":29},{"ruleId":"338","severity":1,"message":"441","line":106,"column":31,"nodeType":"340","messageId":"341","endLine":106,"endColumn":55},{"ruleId":"338","severity":1,"message":"442","line":107,"column":8,"nodeType":"340","messageId":"341","endLine":107,"endColumn":19},{"ruleId":"338","severity":1,"message":"443","line":107,"column":21,"nodeType":"340","messageId":"341","endLine":107,"endColumn":35},{"ruleId":"338","severity":1,"message":"444","line":108,"column":8,"nodeType":"340","messageId":"341","endLine":108,"endColumn":20},{"ruleId":"338","severity":1,"message":"445","line":108,"column":22,"nodeType":"340","messageId":"341","endLine":108,"endColumn":35},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSession'. Either include it or remove the dependency array.","ArrayExpression",["446"],"'Redirect' is defined but never used.","'Box' is defined but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'GithubIcon' is defined but never used.","'Dashboard' is defined but never used.","'Typography' is defined but never used.","'Notifications' is defined but never used.","'Maps' is defined but never used.","'Tables' is defined but never used.","'Icons' is defined but never used.","'Charts' is defined but never used.","'logo' is defined but never used.","'classnames' is defined but never used.","'google' is defined but never used.","'APIService' is defined but never used.","'useHistory' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Checkbox' is defined but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'home11s' is assigned a value but never used.","'setHome11s' is assigned a value but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'matches' is assigned a value but never used.","'setMatches' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"447","text":"448"},{"range":"449","text":"448"},"React Hook useEffect has missing dependencies: 'fetchAlreadyPicked', 'home11s', and 'squad'. Either include them or remove the dependency array.",["450"],{"range":"451","text":"448"},"React Hook useEffect has a missing dependency: 'fetchSquadPlayers'. Either include it or remove the dependency array.",["452"],"no-native-reassign",["453"],"no-negated-in-lhs",["454"],"'users' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'players'. Either include it or remove the dependency array.",["455"],{"range":"456","text":"448"},{"range":"457","text":"448"},"React Hook useEffect has a missing dependency: 'home11s'. Either include it or remove the dependency array.",["458"],"'isLive' is assigned a value but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement",{"range":"459","text":"460"},"'HomeIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'InputBase' is defined but never used.","'Menu' is defined but never used.","'Fab' is defined but never used.","'MailIcon' is defined but never used.","'AccountIcon' is defined but never used.","'SearchIcon' is defined but never used.","'SendIcon' is defined but never used.","'Badge' is defined but never used.","'Notification' is defined but never used.","'UserAvatar' is defined but never used.","'signOut' is defined but never used.","'messages' is assigned a value but never used.","'notifications' is assigned a value but never used.","'history' is assigned a value but never used.","'userDispatch' is assigned a value but never used.","'mailMenu' is assigned a value but never used.","'setMailMenu' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'notificationsMenu' is assigned a value but never used.","'setNotificationsMenu' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'profileMenu' is assigned a value but never used.","'setProfileMenu' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.",{"desc":"461","fix":"462"},[3493,3495],".",[4107,4109],{"desc":"463","fix":"464"},[4565,4567],{"desc":"465","fix":"466"},"no-global-assign","no-unsafe-negation",{"desc":"467","fix":"468"},[4275,4277],[4593,4595],{"desc":"469","fix":"470"},[6129,6130],"","Update the dependencies array to be: [getSession]",{"range":"471","text":"472"},"Update the dependencies array to be: [fetchAlreadyPicked, home11s, match, squad]",{"range":"473","text":"474"},"Update the dependencies array to be: [fetchSquadPlayers]",{"range":"475","text":"476"},"Update the dependencies array to be: [home11s, players]",{"range":"477","text":"478"},"Update the dependencies array to be: [home11s, success]",{"range":"479","text":"480"},[1117,1119],"[getSession]",[4219,4226],"[fetchAlreadyPicked, home11s, match, squad]",[5147,5149],"[fetchSquadPlayers]",[3322,3331],"[home11s, players]",[4704,4713],"[home11s, success]"]