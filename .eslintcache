[{"/home/diprivi/delta/sosaIPL/frontend/src/index.js":"1","/home/diprivi/delta/sosaIPL/frontend/src/serviceWorker.js":"2","/home/diprivi/delta/sosaIPL/frontend/src/components/App.js":"3","/home/diprivi/delta/sosaIPL/frontend/src/context/LayoutContext.js":"4","/home/diprivi/delta/sosaIPL/frontend/src/context/UserContext.js":"5","/home/diprivi/delta/sosaIPL/frontend/src/themes/index.js":"6","/home/diprivi/delta/sosaIPL/frontend/src/apiservice.js":"7","/home/diprivi/delta/sosaIPL/frontend/src/themes/default.js":"8","/home/diprivi/delta/sosaIPL/frontend/src/components/Layout/Layout.js":"9","/home/diprivi/delta/sosaIPL/frontend/src/pages/error/Error.js":"10","/home/diprivi/delta/sosaIPL/frontend/src/pages/login/Login.js":"11","/home/diprivi/delta/sosaIPL/frontend/src/config.js":"12","/home/diprivi/delta/sosaIPL/frontend/src/pages/login/styles.js":"13","/home/diprivi/delta/sosaIPL/frontend/src/pages/error/styles.js":"14","/home/diprivi/delta/sosaIPL/frontend/src/pages/Scoreboard/Scoreboard.js":"15","/home/diprivi/delta/sosaIPL/frontend/src/pages/PickTeam/PickTeam.js":"16","/home/diprivi/delta/sosaIPL/frontend/src/pages/CreateTeam/CreateTeam.js":"17","/home/diprivi/delta/sosaIPL/frontend/src/pages/CreateMatch/CreateMatch.js":"18","/home/diprivi/delta/sosaIPL/frontend/src/pages/Matches/Matches.js":"19","/home/diprivi/delta/sosaIPL/frontend/src/pages/AddPlayer/AddPlayer.js":"20","/home/diprivi/delta/sosaIPL/frontend/src/components/Layout/styles.js":"21","/home/diprivi/delta/sosaIPL/frontend/src/pages/charts/Charts.js":"22","/home/diprivi/delta/sosaIPL/frontend/src/pages/icons/Icons.js":"23","/home/diprivi/delta/sosaIPL/frontend/src/pages/tables/Tables.js":"24","/home/diprivi/delta/sosaIPL/frontend/src/pages/maps/Maps.js":"25","/home/diprivi/delta/sosaIPL/frontend/src/pages/notifications/Notifications.js":"26","/home/diprivi/delta/sosaIPL/frontend/src/pages/typography/Typography.js":"27","/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/Dashboard.js":"28","/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/Sidebar.js":"29","/home/diprivi/delta/sosaIPL/frontend/src/components/Header/Header.js":"30","/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/mock.js":"31","/home/diprivi/delta/sosaIPL/frontend/src/pages/charts/components/ApexHeatmap.js":"32","/home/diprivi/delta/sosaIPL/frontend/src/pages/charts/components/ApexLineChart.js":"33","/home/diprivi/delta/sosaIPL/frontend/src/components/Header/styles.js":"34","/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/styles.js":"35","/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/components/Dot.js":"36","/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"37","/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/components/Table/Table.js":"38","/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/components/BigStat/BigStat.js":"39","/home/diprivi/delta/sosaIPL/frontend/src/pages/typography/styles.js":"40","/home/diprivi/delta/sosaIPL/frontend/src/pages/notifications/styles.js":"41","/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/styles.js":"42","/home/diprivi/delta/sosaIPL/frontend/src/pages/maps/styles.js":"43","/home/diprivi/delta/sosaIPL/frontend/src/components/PageTitle/PageTitle.js":"44","/home/diprivi/delta/sosaIPL/frontend/src/components/Widget/Widget.js":"45","/home/diprivi/delta/sosaIPL/frontend/src/pages/icons/styles.js":"46","/home/diprivi/delta/sosaIPL/frontend/src/components/Wrappers/Wrappers.js":"47","/home/diprivi/delta/sosaIPL/frontend/src/components/UserAvatar/UserAvatar.js":"48","/home/diprivi/delta/sosaIPL/frontend/src/components/Notification/Notification.js":"49","/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/components/SidebarLink/styles.js":"50","/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/components/BigStat/styles.js":"51","/home/diprivi/delta/sosaIPL/frontend/src/components/PageTitle/styles.js":"52","/home/diprivi/delta/sosaIPL/frontend/src/components/Widget/styles.js":"53","/home/diprivi/delta/sosaIPL/frontend/src/components/Notification/styles.js":"54","/home/diprivi/delta/sosaIPL/frontend/src/components/UserAvatar/styles.js":"55"},{"size":871,"mtime":1617630395794,"results":"56","hashOfConfig":"57"},{"size":4948,"mtime":1616852043443,"results":"58","hashOfConfig":"57"},{"size":2888,"mtime":1617682587573,"results":"59","hashOfConfig":"57"},{"size":1392,"mtime":1616997401407,"results":"60","hashOfConfig":"57"},{"size":1977,"mtime":1616997401407,"results":"61","hashOfConfig":"57"},{"size":502,"mtime":1616852043443,"results":"62","hashOfConfig":"57"},{"size":5717,"mtime":1617908432670,"results":"63","hashOfConfig":"57"},{"size":2987,"mtime":1616997938183,"results":"64","hashOfConfig":"57"},{"size":2324,"mtime":1617703235524,"results":"65","hashOfConfig":"57"},{"size":1318,"mtime":1617679928570,"results":"66","hashOfConfig":"57"},{"size":8238,"mtime":1617868330110,"results":"67","hashOfConfig":"57"},{"size":49,"mtime":1617953894600,"results":"68","hashOfConfig":"57"},{"size":3298,"mtime":1617703350697,"results":"69","hashOfConfig":"57"},{"size":1312,"mtime":1617679864973,"results":"70","hashOfConfig":"57"},{"size":5869,"mtime":1617685294667,"results":"71","hashOfConfig":"57"},{"size":11757,"mtime":1617954599883,"results":"72","hashOfConfig":"57"},{"size":10133,"mtime":1617870572764,"results":"73","hashOfConfig":"57"},{"size":11084,"mtime":1617896249203,"results":"74","hashOfConfig":"57"},{"size":17533,"mtime":1617897128447,"results":"75","hashOfConfig":"57"},{"size":3713,"mtime":1616933490707,"results":"76","hashOfConfig":"57"},{"size":680,"mtime":1616852043440,"results":"77","hashOfConfig":"57"},{"size":5556,"mtime":1616997391580,"results":"78","hashOfConfig":"57"},{"size":377833,"mtime":1616852043443,"results":"79","hashOfConfig":"57"},{"size":2082,"mtime":1616997391480,"results":"80","hashOfConfig":"57"},{"size":971,"mtime":1616997391523,"results":"81","hashOfConfig":"57"},{"size":13470,"mtime":1616997391500,"results":"82","hashOfConfig":"57"},{"size":4506,"mtime":1616997391453,"results":"83","hashOfConfig":"57"},{"size":15659,"mtime":1616852043443,"results":"84","hashOfConfig":"57"},{"size":3976,"mtime":1617954307163,"results":"85","hashOfConfig":"57"},{"size":3937,"mtime":1617679724293,"results":"86","hashOfConfig":"57"},{"size":4105,"mtime":1616852043443,"results":"87","hashOfConfig":"57"},{"size":1794,"mtime":1616997391580,"results":"88","hashOfConfig":"57"},{"size":1328,"mtime":1616997391583,"results":"89","hashOfConfig":"57"},{"size":3868,"mtime":1616852043440,"results":"90","hashOfConfig":"57"},{"size":1304,"mtime":1616852043440,"results":"91","hashOfConfig":"57"},{"size":862,"mtime":1616852043440,"results":"92","hashOfConfig":"57"},{"size":4797,"mtime":1617954350303,"results":"93","hashOfConfig":"57"},{"size":1274,"mtime":1616852043443,"results":"94","hashOfConfig":"57"},{"size":4039,"mtime":1616852043443,"results":"95","hashOfConfig":"57"},{"size":374,"mtime":1616997391447,"results":"96","hashOfConfig":"57"},{"size":1858,"mtime":1616997391500,"results":"97","hashOfConfig":"57"},{"size":2870,"mtime":1616852043443,"results":"98","hashOfConfig":"57"},{"size":171,"mtime":1616997391527,"results":"99","hashOfConfig":"57"},{"size":440,"mtime":1616996846403,"results":"100","hashOfConfig":"57"},{"size":2485,"mtime":1616852043440,"results":"101","hashOfConfig":"57"},{"size":780,"mtime":1616852043443,"results":"102","hashOfConfig":"57"},{"size":3790,"mtime":1616997466447,"results":"103","hashOfConfig":"57"},{"size":606,"mtime":1616996891103,"results":"104","hashOfConfig":"57"},{"size":3296,"mtime":1616997481147,"results":"105","hashOfConfig":"57"},{"size":1285,"mtime":1616852043440,"results":"106","hashOfConfig":"57"},{"size":1027,"mtime":1616852043443,"results":"107","hashOfConfig":"57"},{"size":462,"mtime":1616852043440,"results":"108","hashOfConfig":"57"},{"size":969,"mtime":1616852043440,"results":"109","hashOfConfig":"57"},{"size":993,"mtime":1616997481143,"results":"110","hashOfConfig":"57"},{"size":276,"mtime":1616852043440,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},"guprjh",{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"115"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"115"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"115"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"115"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"148","usedDeprecatedRules":"115"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"153","usedDeprecatedRules":"115"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"115"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"159","usedDeprecatedRules":"115"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"115"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"115"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},"/home/diprivi/delta/sosaIPL/frontend/src/index.js",["235"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport Themes from \"./themes\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { LayoutProvider } from \"./context/LayoutContext\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n  <LayoutProvider>\n    <UserProvider>\n      <ThemeProvider theme={Themes.default}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </UserProvider>\n  </LayoutProvider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n",["236","237"],"/home/diprivi/delta/sosaIPL/frontend/src/serviceWorker.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/App.js",["238","239","240"],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\n\n\n// components\nimport Layout from \"./Layout\";\n\n// pages\nimport Error from \"../pages/error\";\nimport Login from \"../pages/login\";\n\nimport api from \"../apiservice\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\n// context\n\nexport default function App() {\n  // global\n  var session = localStorage.getItem(\"session\");\n  var [isAuthenticated, setIsAuthenticated] = useState(false);\n  var [userData, setUserData] = useState({});\n  var [isLoading, setIsLoading] = useState(true);\n  const history = useHistory();\n\n  const getSession = async () => {\n    let res = undefined;\n    if(session)\n      res = await api.getUserData();\n    return res;\n  };\n\n\n  useEffect( () => {\n    let res = getSession().then(res => {\n      if(res && res.data.user) {\n        setIsAuthenticated(true);\n        setUserData(res.data.user);\n        setIsLoading(false);\n      } else {\n        setIsLoading(false);\n        setIsAuthenticated(false);\n      }\n    }).catch(e => {\n      setIsAuthenticated(false);\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    isLoading ? <div style={{width: \"100vw\", height:\"100vh\", display: \"flex\",\n        justifyContent: \"center\", alignItems : \"center\"\n      }}><Loader\n        type=\"ThreeDots\"\n        color=\"#536DFE\"\n        height={100}\n        width={100}/></div>:\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/app/scoreboard\" />} />\n          <Route\n            exact\n            path=\"/app\"\n            render={() => <Redirect to=\"/app/Scoreboard\" />}\n          />\n          <PrivateRoute path=\"/app\" component={Layout} prop={{userData: userData}}/>\n          <PublicRoute path=\"/login\" component={Login} prop={{historyData :history}}/>\n          <Route component={Error} />\n        </Switch>\n      </Router>\n  );\n\n  // #######################################################################\n\n  function PrivateRoute({ component, prop, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            React.createElement(component, prop)\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\n  function PublicRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            <Redirect\n              to={{\n                pathname: \"/\",\n              }}\n            />\n          ) : (\n            React.createElement(component, props)\n          )\n        }\n      />\n    );\n  }\n}\n","/home/diprivi/delta/sosaIPL/frontend/src/context/LayoutContext.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/context/UserContext.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/themes/index.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/apiservice.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/themes/default.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Layout/Layout.js",["241"],"import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\nimport { AddPlayer } from \"../../pages/AddPlayer/AddPlayer\";\nimport { AddMatch } from \"../../pages/CreateMatch/CreateMatch\";\nimport { Matches } from \"../../pages/Matches/Matches\";\nimport { CreateTeam } from \"../../pages/CreateTeam/CreateTeam\";\nimport { PickTeam } from \"../../pages/PickTeam/PickTeam\";\nimport { ScoreBoard } from \"../../pages/Scoreboard/Scoreboard\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n  var userData = props.userData;\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n        <>\n          <Header history={props.history} />\n          <Sidebar isAdmin={userData.isAdmin}/>\n          <div\n            className={classnames(classes.content, {\n              [classes.contentShift]: layoutState.isSidebarOpened,\n            })}\n          >\n            <div className={classes.fakeToolbar} />\n            <Switch>\n              <AdminRoute path=\"/app/AddPlayer\" component={AddPlayer}/>\n              <AdminRoute path=\"/app/AddMatch\" component={AddMatch}/>\n              <Route path=\"/app/Matches\" render = {(props) =>  <Matches userData={userData}/>}/>\n              <AdminRoute path=\"/app/AddTeam\" component={CreateTeam}/>\n              <Route path=\"/app/SetTeam\" render={(props) => <PickTeam userData={userData}/>}/>\n              <Route path=\"/app/scoreboard\" component={ScoreBoard}/>\n            </Switch>\n          </div>\n        </>\n    </div>\n  );\n\n  function AdminRoute({ component, prop, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          userData.isAdmin ? (\n            React.createElement(component, prop)\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n}\n\n\n\nexport default withRouter(Layout);\n","/home/diprivi/delta/sosaIPL/frontend/src/pages/error/Error.js",["242"],"import React from \"react\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"./logo.svg\";\n\nexport default function Error() {\n  var classes = useStyles();\n\n  return (\n    <Grid container className={classes.container}>\n      <Paper classes={{ root: classes.paperRoot }}>\n        <Typography\n          variant=\"h1\"\n          color=\"primary\"\n          className={classnames(classes.textRow, classes.errorCode)}\n        >\n          404\n        </Typography>\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\n          Oops. Looks like the page you're looking for no longer exists\n        </Typography>\n        <Typography\n          variant=\"h6\"\n          color=\"text\"\n          colorBrightness=\"secondary\"\n          className={classnames(classes.textRow, classes.safetyText)}\n        >\n          But we're here to bring you back to safety\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/\"\n          size=\"large\"\n          className={classes.backButton}\n        >\n          Back to Home\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n","/home/diprivi/delta/sosaIPL/frontend/src/pages/login/Login.js",["243","244","245","246","247","248","249","250","251"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\n\n// context\n\nimport api from \"../../apiservice\"\nimport APIService from \"../../apiservice\";\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  var [rollValue, setRollValue] = useState(\"\");\n  var [contactValue, setContactValue] = useState(\"\");\n  var [errorMessage, setErrorMessage] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      let res = await api.login(loginValue, passwordValue);\n      let user = res.data.user;\n      if(res.data.status !== 200){\n        setError(true);\n        setErrorMessage(res.data.message);\n        setIsLoading(false);\n        return;\n      }\n      localStorage.setItem(\"session\", user.session);\n      setIsLoading(false);\n      setIsLoggedIn(true);\n      window.location.href = \"/\";\n    } catch (e) {\n      console.log(e);\n      setError(true);\n      setErrorMessage(\"Something Went Wrong\");\n      setIsLoading(false);\n      setIsLoggedIn(false);\n    }\n  };\n\n  const handleRegister = async () => {\n    setIsLoading(true);\n    try {\n      let res = await api.register(loginValue, passwordValue, contactValue, nameValue);\n      if(res.status === 200){\n        setActiveTabId(0);\n        setIsLoading(false);\n        setError(true);\n        setErrorMessage(res.data.message);\n      }\n    } catch (e) {\n      setError(true);\n      setErrorMessage(\"Something Went Wrong\");\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.formContainer}>\n        <img src={\"/fantasy_text.png\"} alt={\"logo\"} className={classes.logotypeImage}/>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => {setActiveTabId(id); setError(false)}}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"Register\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  {errorMessage}\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || passwordValue.length === 0\n                    }\n                    onClick={(e) =>\n                      handleLogin(e)\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    fullWidth\n                  >\n                    Login\n                  </Button>\n                )}\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  {errorMessage}\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={e => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Set New Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <TextField\n                id=\"contactNumber\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={contactValue}\n                onChange={e => setContactValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Contact\"\n                type=\"text\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                  <Button\n                    onClick={() =>\n                      handleRegister()\n                    }\n                    disabled={\n                      loginValue.length === 0 ||\n                      passwordValue.length === 0 ||\n                      nameValue.length === 0\n                    }\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    className={classes.createAccountButton}\n                  >\n                    Create your account\n                  </Button>\n                )}\n              </div>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n      <Typography variant={'colorPrimary'} style={{textAlign: \"center\", position: \"fixed\",\n        bottom:\"0\", left:\"0\", right:\"0\"\n      }}>\n        Made With ❤️ By Delta Force\n      </Typography>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","/home/diprivi/delta/sosaIPL/frontend/src/config.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/login/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/error/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/Scoreboard/Scoreboard.js",["252","253","254","255","256","257","258","259","260","261","262","263","264","265"],"import React, { useEffect, useState } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport APIService from \"../../apiservice\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Loader from \"react-loader-spinner\";\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  formInputs : {\n    display : \"flex\",\n    justifyContent : \"space-around\",\n    alignItems : \"baseline\",\n  },\n  selector : {\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  name : {\n    height : \"80%\",\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  button : {\n    width: \"20%\",\n    margin: \"10px auto\",\n    display: \"flex\"\n  },\n  success : {\n    textAlign: \"center\",\n    color:\"green\"\n  },\n  error : {\n    textAlign: \"center\",\n    color:\"red\"\n  },\n  teamsBox : {\n    width: \"100%\",\n    height: \"420px\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  homeBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  awayBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  table : {\n    overflowY : \"scroll\",\n    minWidth: 275,\n    height: \"50vh\"\n  },\n  matchNo : {\n    display : \"flex\",\n    justifyContent :\"center\",\n    alignItems: \"center\",\n    marginBottom: \"10px\"\n  },\n  row : {\n    height: \"10px\",\n  }\n}));\n\n\nexport function ScoreBoard (props) {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [home11s, setHome11s] = useState([]);\n  const [userId, setUserId] = useState(\"\");\n  const [matches, setMatches] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  const compare = ( a, b ) => {\n    if ( a.points > b.points ){\n      return -1;\n    }\n    return 1;\n  };\n\n  const fetchUsers = async () => {\n    let res = APIService.getAllUsers(true);\n    return res;\n  };\n\n  useEffect(()=>{\n    fetchUsers().then(res => {\n      if(res.data.status !== 200) {\n        setError(res.data.message);\n        setTimeout(()=>{setError(\"\")}, 5000);\n        return\n      }\n      let sortedUsers = res.data.data.sort(compare);\n      setUsers(sortedUsers);\n      setIsLoading(false);\n    }). catch(e => {\n      setError(\"Something Went Wrong\");\n      setTimeout(()=>{setError(\"\")}, 5000);\n    });\n  },[]);\n\n  return (\n    <>\n      {isLoading ? <div style={{\n        width: \"100vw\", height: \"100vh\", display: \"flex\",\n        justifyContent: \"center\", alignItems: \"center\"\n      }}>\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#536DFE\"\n          height={100}\n          width={100}/>\n      </div> : <>\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography variant={'h1'} className={classes.title}>\n              Scoreboard\n            </Typography>\n            <br/>\n            {error.length !== 0 &&\n            <Typography variant={'h6'} className={classes.error}>\n              {error}\n            </Typography>\n            }\n            {success.length !== 0 &&\n            <Typography variant={'h6'} className={classes.success}>\n              {success}\n            </Typography>\n            }\n          </CardContent>\n        </Card>\n\n        <br/><br/><br/>\n        <Card className={classes.table}>\n          <CardContent>\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <StyledTableRow>\n                    <StyledTableCell>Pos</StyledTableCell>\n                    <StyledTableCell>User Name</StyledTableCell>\n                    <StyledTableCell>Points</StyledTableCell>\n                  </StyledTableRow>\n                </TableHead>\n                <TableBody stripedRows>\n                  {users.map((user, key) => (\n                    <StyledTableRow key={user.name}>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {key + 1}\n                      </StyledTableCell>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {user.name}\n                      </StyledTableCell>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {user.points}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </CardContent>\n        </Card>\n      </>\n      }\n    </>\n  )\n}","/home/diprivi/delta/sosaIPL/frontend/src/pages/PickTeam/PickTeam.js",["266","267","268","269","270","271","272","273","274","275"],"/home/diprivi/delta/sosaIPL/frontend/src/pages/CreateTeam/CreateTeam.js",["276","277","278","279","280","281"],"import React, { useEffect, useState } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport APIService from \"../../apiservice\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Loader from \"react-loader-spinner\";\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  formInputs : {\n    display : \"flex\",\n    justifyContent : \"space-around\",\n    alignItems : \"baseline\",\n  },\n  selector : {\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  name : {\n    height : \"80%\",\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  button : {\n    width: \"20%\",\n    margin: \"10px auto\",\n    display: \"flex\"\n  },\n  success : {\n    textAlign: \"center\",\n    color:\"green\"\n  },\n  error : {\n    textAlign: \"center\",\n    color:\"red\"\n  },\n  teamsBox : {\n    width: \"100%\",\n    height: \"420px\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  homeBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  awayBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  table : {\n    overflowY : \"scroll\",\n    minWidth: 275,\n    height: \"80vh\"\n  },\n  matchNo : {\n    display : \"flex\",\n    justifyContent :\"center\",\n    alignItems: \"center\",\n    marginBottom: \"10px\"\n  }\n}));\n\n\nexport function CreateTeam () {\n  const classes = useStyles();\n  const [teamName, setTeamName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [home11s, setHome11s] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [email1, setEmail1] = useState(\"\");\n  const [email2, setEmail2] = useState(\"\");\n  const [email3, setEmail3] = useState(\"\");\n\n  useEffect(() => {\n    setIsLoading(true);\n    let data = [...players];\n    for(let i=0;i<data.length;i++){\n      if(home11s.includes(data[i]._id)) {\n        data[i].selected = 1;\n      } else data[i].selected = 0;\n    }\n    setPlayers(data);\n    setIsLoading(false);\n  }, [home11s]);\n\n  const getAllPlayers = async () => {\n    let res = await APIService.getTeamSquad(\"CSK\");\n    return res;\n  };\n\n  const getTeamPlayers = async (teamName) => {\n    let res = await APIService.getTeamSquad(teamName);\n    let data = res.data.data;\n    for(let i=0;i<data.length;i++){\n      if(home11s.includes(data[i]._id)) {\n        data[i].selected = 1;\n      } else data[i].selected = 0;\n    }\n    setPlayers(data);\n  };\n\n  useEffect(()=> {\n    setIsLoading(true);\n    getAllPlayers().then(res => {\n      if(res.data.status !== 200) {\n        setError(res.data.message);\n        setTimeout(()=>{setError(\"\")}, 5000);\n        setIsLoading(false);\n        return\n      }\n      let data = res.data.data;\n      for(let i=0;i<data.length;i++){\n        if(home11s.includes(data[i]._id)) {\n          data[i].selected = 1;\n        } else data[i].selected = 0;\n      }\n      setPlayers(data);\n      setIsLoading(false);\n    }). catch(e => {\n      setError(\"Something Went Wrong\");\n      setTimeout(()=>{setError(\"\")}, 5000);\n      setIsLoading(false);\n    });\n  }, [success]);\n\n  const selectHomePlayer = async (playerId) => {\n    let home11Changed = [...home11s];\n    if(home11Changed.includes(playerId)){\n      home11Changed = home11Changed.filter((value) => {\n        return value !== playerId;\n      })\n    } else {\n      home11Changed.push(playerId);\n    }\n    setHome11s(home11Changed);\n  };\n\n  const addTeam = async () => {\n    setIsLoading(true);\n    try {\n      let res = await APIService.createUsersWithTeam([email1, email2, email3], teamName, home11s);\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        setTimeout(() => {\n          setError(\"\")\n        }, 5000);\n        setIsLoading(false);\n        return\n      }\n      setSuccess(res.data.message);\n      setTimeout(() => {\n        setSuccess(\"\")\n      }, 5000);\n      setIsLoading(false);\n    } catch (e) {\n      setError(\"Something Went Wrong\");\n      setTimeout(() => {\n        setError(\"\")\n      }, 5000);\n      setIsLoading(false);\n    }\n  };\n\n\n\n  // const handleAddPlayer = async () => {\n  //   setIsLoading(true);\n  //   try {\n  //     let res = await APIService.addPlayer(playerName, teamName);\n  //     if(res.data.status !== 200){\n  //       setError(res.data.message);\n  //       setIsLoading(false);\n  //       setTimeout(()=>{setError(\"\")}, 5000);\n  //       return\n  //     }\n  //     setSuccess(res.data.message);\n  //     setIsLoading(false);\n  //     setTimeout(()=>{setSuccess(\"\")}, 5000);\n  //   } catch (e) {\n  //     console.log(e);\n  //     setError(\"Something Went Wrong\");\n  //     setTimeout(()=>{setError(\"\")}, 5000);\n  //   }\n  // };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography variant={'h1'} className={classes.title}>\n            Create Team\n          </Typography>\n          <br/>\n          {error.length !== 0 &&\n          <Typography variant={'h6'} className={classes.error}>\n            {error}\n          </Typography>\n          }\n          <div className={classes.formInputs}>\n            <TextField id=\"outlined-basic\" label=\"Email 1\"\n                       className={classes.name} onChange={(e)=>{setEmail1(e.target.value)}}/>\n            <TextField id=\"outlined-basic\" label=\"Email 2\"\n                       className={classes.name} onChange={(e)=>{setEmail2(e.target.value)}}/>\n            <TextField id=\"outlined-basic\" label=\"Email 3\"\n                       className={classes.name} onChange={(e)=>{setEmail3(e.target.value)}}/>\n            <TextField id=\"outlined-basic\" label=\"Team Name\"\n                       className={classes.name} onChange={(e)=>{setTeamName(e.target.value)}}/>\n          </div>\n          {success.length !== 0 &&\n          <Typography variant={'h6'} className={classes.success}>\n            {success}\n          </Typography>\n          }\n          <Typography variant={'h6'} className={classes.success} >\n            {`You have selected ${home11s.length} Players`}\n          </Typography>\n          {isLoading && <div style={{width: \"100%\", height:\"100%\", display: \"flex\",\n            justifyContent: \"center\", alignItems : \"center\"\n          }}><Loader\n            type=\"ThreeDots\"\n            color=\"#536DFE\"\n            height={50}\n            width={50}/></div>}\n        </CardContent>\n      </Card>\n\n      <br/><br/><br/>\n      <Card className={classes.table}>\n        <CardContent>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <StyledTableRow>\n                  <StyledTableCell>Player Name</StyledTableCell>\n                  <StyledTableCell>\n                    Player Team\n                    <Select\n                      labelId=\"demo-simple-select-outlined-label\"\n                      id=\"demo-simple-select-outlined\"\n                      onChange={(e)=>{getTeamPlayers(e.target.value)}}\n                      label=\"Team\"\n                      className={classes.selector}\n                    >\n                      <MenuItem value={\"CSK\"}>CSK</MenuItem>\n                      <MenuItem value={\"DC\"}>DC</MenuItem>\n                      <MenuItem value={\"KKR\"}>KKR</MenuItem>\n                      <MenuItem value={\"MI\"}>MI</MenuItem>\n                      <MenuItem value={\"PBKS\"}>PBKS</MenuItem>\n                      <MenuItem value={\"RR\"}>RR</MenuItem>\n                      <MenuItem value={\"RCB\"}>RCB</MenuItem>\n                      <MenuItem value={\"SRH\"}>SRH</MenuItem>\n                    </Select>\n                  </StyledTableCell>\n                  <StyledTableCell>Select Player</StyledTableCell>\n                </StyledTableRow>\n              </TableHead>\n              <TableBody stripedRows>\n                {players.map((player) => (\n                  <StyledTableRow key={player.name}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      {player.name}\n                    </StyledTableCell>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      {player.teamName}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      <Checkbox\n                        checked={player.selected}\n                        color=\"primary\" onChange={()=>selectHomePlayer(player._id)}/>\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n      <Button disabled={isLoading} onClick={addTeam} className={classes.button} variant={\"contained\"} color=\"primary\">ADD</Button>\n    </>\n  )\n}","/home/diprivi/delta/sosaIPL/frontend/src/pages/CreateMatch/CreateMatch.js",["282","283","284","285","286","287","288","289","290","291","292","293","294"],"import React, { useState } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport APIService from \"../../apiservice\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Loader from \"react-loader-spinner\";\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  formInputs : {\n    display : \"flex\",\n    justifyContent : \"space-around\",\n    alignItems : \"baseline\",\n  },\n  selector : {\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  name : {\n    height : \"80%\",\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  button : {\n    width: \"20%\",\n    margin: \"10px auto\",\n    display: \"flex\"\n  },\n  success : {\n    textAlign: \"center\",\n    color:\"green\"\n  },\n  error : {\n    textAlign: \"center\",\n    color:\"red\"\n  },\n  teamsBox : {\n    width: \"100%\",\n    height: \"420px\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  homeBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  awayBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  table : {\n    overflowY : \"scroll\",\n    minWidth: 275,\n  },\n  matchNo : {\n    display : \"flex\",\n    justifyContent :\"center\",\n    alignItems: \"center\",\n    marginBottom: \"10px\"\n  }\n}));\n\n\nexport function AddMatch () {\n  const classes = useStyles();\n  const [homeTeamName, setHomeTeamName] = useState(\"\");\n  const [awayTeamName, setAwayTeamName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [homeSquad, setHomeSquad] = useState([]);\n  const [awaySquad, setAwaySquad] = useState([]);\n  const [away11s, setAway11s] = useState([]);\n  const [home11s, setHome11s] = useState([]);\n  const [matchNo, setMatchNo] = useState(\"\");\n\n  const handleAwayTeam = async (teamName) => {\n    setIsLoading(true);\n    try {\n      let res = await APIService.getTeamSquad(teamName);\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        setIsLoading(false);\n        return\n      }\n      setAwaySquad(res.data.data);\n      setAwayTeamName(teamName);\n      setIsLoading(false);\n    } catch (e) {\n      setError(\"Something Went Wrong\");\n      setIsLoading(false);\n    }\n  };\n\n  const handleHomeTeam = async (teamName) => {\n    setIsLoading(true);\n    try {\n      let res = await APIService.getTeamSquad(teamName);\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        setIsLoading(false);\n        return\n      }\n      setHomeSquad(res.data.data);\n      setHomeTeamName(teamName);\n      setIsLoading(false);\n    } catch (e) {\n      setError(\"Something Went Wrong\");\n      setIsLoading(false);\n    }\n  };\n\n  const handleCreateMatch = async () => {\n    setIsLoading(true);\n    if(matchNo === \"\") {\n      setError(\"Please Enter Match No\");\n      setIsLoading(false);\n      return\n    }\n    try {\n      let res = await APIService.createMatch(homeTeamName, awayTeamName, matchNo, home11s, away11s);\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        setIsLoading(false);\n        return\n      }\n      setSuccess(res.data.message);\n      setIsLoading(false);\n    } catch (e) {\n      setError(\"Something Went Wrong\");\n      setIsLoading(false);\n    }\n  };\n\n  const selectAwayPlayer = async (playerId) => {\n    let away11Changed = [...away11s];\n    if(away11Changed.includes(playerId)){\n      away11Changed = away11Changed.filter((value) => {\n        return value !== playerId;\n      })\n    } else {\n      away11Changed.push(playerId);\n    }\n    setAway11s(away11Changed);\n  };\n\n  const selectHomePlayer = async (playerId) => {\n    let home11Changed = [...home11s];\n    if(home11Changed.includes(playerId)){\n      home11Changed = home11Changed.filter((value) => {\n        return value !== playerId;\n      })\n    } else {\n      home11Changed.push(playerId);\n    }\n    setHome11s(home11Changed);\n  };\n\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography variant={'h1'} className={classes.title}>\n            Create Match\n          </Typography>\n          <br/>\n          {error.length !== 0 &&\n          <Typography variant={'h6'} className={classes.error}>\n            {error}\n          </Typography>\n          }\n          <div className={classes.matchNo}>\n          <TextField id=\"outlined-basic\" label=\"Match No\"\n                     className={classes.name} onChange={(e)=>{setMatchNo(e.target.value)}}/>\n          </div>\n          <div className={classes.formInputs}>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              onChange={(e)=>{handleHomeTeam(e.target.value)}}\n              label=\"Home Team\"\n              className={classes.selector}\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={\"CSK\"}>CSK</MenuItem>\n              <MenuItem value={\"RCB\"}>RCB</MenuItem>\n              <MenuItem value={\"MI\"}>MI</MenuItem>\n              <MenuItem value={\"KKR\"}>KKR</MenuItem>\n              <MenuItem value={\"SRH\"}>SRH</MenuItem>\n              <MenuItem value={\"DC\"}>DC</MenuItem>\n              <MenuItem value={\"RR\"}>RR</MenuItem>\n              <MenuItem value={\"PBKS\"}>PBKS</MenuItem>\n            </Select>\n\n            <Typography variant={'h1'} className={classes.title}>\n              V S\n            </Typography>\n\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              onChange={(e)=>{handleAwayTeam(e.target.value)}}\n              label=\"Away Team\"\n              className={classes.selector}\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={\"CSK\"}>CSK</MenuItem>\n              <MenuItem value={\"RCB\"}>RCB</MenuItem>\n              <MenuItem value={\"MI\"}>MI</MenuItem>\n              <MenuItem value={\"KKR\"}>KKR</MenuItem>\n              <MenuItem value={\"SRH\"}>SRH</MenuItem>\n              <MenuItem value={\"DC\"}>DC</MenuItem>\n              <MenuItem value={\"RR\"}>RR</MenuItem>\n              <MenuItem value={\"PBKS\"}>PBKS</MenuItem>\n            </Select>\n          </div>\n          {success.length !== 0 &&\n          <Typography variant={'h6'} className={classes.success} >\n            {success}\n          </Typography>\n          }\n          {isLoading && <div style={{width: \"100%\", height:\"100%\", display: \"flex\",\n            justifyContent: \"center\", alignItems : \"center\"\n          }}><Loader\n            type=\"ThreeDots\"\n            color=\"#536DFE\"\n            height={50}\n            width={50}/></div>}\n        </CardContent>\n      </Card>\n\n      {/*<br/><br/><br/>*/}\n      {/*<Card className={classes.table}>*/}\n        {/*<CardContent>*/}\n          {/*<div className={classes.teamsBox}>*/}\n            {/*<div className={classes.homeBox}>*/}\n              {/*<TableContainer component={Paper}>*/}\n                {/*<Table className={classes.table} aria-label=\"simple table\">*/}\n                  {/*<TableHead>*/}\n                    {/*<StyledTableRow>*/}\n                      {/*<StyledTableCell>Player Name</StyledTableCell>*/}\n                      {/*<StyledTableCell>Total Points</StyledTableCell>*/}\n                    {/*</StyledTableRow>*/}\n                  {/*</TableHead>*/}\n                  {/*<TableBody stripedRows>*/}\n                    {/*{homeSquad.map((player) => (*/}\n                      {/*<StyledTableRow key={player.name}>*/}\n                        {/*<StyledTableCell component=\"th\" scope=\"row\">*/}\n                          {/*{player.name}*/}\n                        {/*</StyledTableCell>*/}\n                        {/*<StyledTableCell align=\"center\">*/}\n                          {/*<Checkbox*/}\n                            {/*color=\"primary\" onChange={()=>selectHomePlayer(player._id)}/>*/}\n                        {/*</StyledTableCell>*/}\n                      {/*</StyledTableRow>*/}\n                    {/*))}*/}\n                  {/*</TableBody>*/}\n                {/*</Table>*/}\n              {/*</TableContainer>*/}\n            {/*</div>*/}\n\n            {/*<div className={classes.awayBox}>*/}\n              {/*<TableContainer component={Paper}>*/}\n                {/*<Table className={classes.table} aria-label=\"simple table\">*/}\n                  {/*<TableHead>*/}\n                    {/*<StyledTableRow>*/}\n                      {/*<StyledTableCell>Player Name</StyledTableCell>*/}\n                      {/*<StyledTableCell>Total Points</StyledTableCell>*/}\n                    {/*</StyledTableRow>*/}\n                  {/*</TableHead>*/}\n                  {/*<TableBody stripedRows>*/}\n                    {/*{awaySquad.map((player) => (*/}\n                      {/*<StyledTableRow key={player.name}>*/}\n                        {/*<StyledTableCell component=\"th\" scope=\"row\">*/}\n                          {/*{player.name}*/}\n                        {/*</StyledTableCell>*/}\n                        {/*<StyledTableCell align=\"center\">*/}\n                          {/*<Checkbox*/}\n                            {/*color=\"primary\" onChange={()=>selectAwayPlayer(player._id)}/>*/}\n                        {/*</StyledTableCell>*/}\n                      {/*</StyledTableRow>*/}\n                    {/*))}*/}\n                  {/*</TableBody>*/}\n                {/*</Table>*/}\n              {/*</TableContainer>*/}\n            {/*</div>*/}\n          {/*</div>*/}\n        {/*</CardContent>*/}\n      {/*</Card>*/}\n      <Button disabled={isLoading} onClick={handleCreateMatch} className={classes.button} variant={\"contained\"} color=\"primary\">ADD</Button>\n    </>\n  )\n}","/home/diprivi/delta/sosaIPL/frontend/src/pages/Matches/Matches.js",["295","296","297","298","299","300","301","302","303"],"import React, { useEffect, useState } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport APIService from \"../../apiservice\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Loader from \"react-loader-spinner\";\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  formInputs : {\n    display : \"flex\",\n    justifyContent : \"space-around\",\n    alignItems : \"baseline\",\n  },\n  selector : {\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  name : {\n    height : \"80%\",\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  button : {\n    width: \"20%\",\n    margin: \"10px auto\",\n    display: \"flex\"\n  },\n  success : {\n    textAlign: \"center\",\n    color:\"green\"\n  },\n  error : {\n    textAlign: \"center\",\n    color:\"red\"\n  },\n  teamsBox : {\n    width: \"100%\",\n    height: \"420px\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  homeBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  awayBox : {\n    height: \"100%\",\n    width: \"48%\",\n    margin: \"10px\",\n  },\n  table : {\n    overflowY : \"scroll\",\n    minWidth: 275,\n  },\n  matchNo : {\n    display : \"flex\",\n    justifyContent :\"center\",\n    alignItems: \"center\",\n    marginBottom: \"10px\"\n  }\n}));\n\n\nexport function Matches ({userData}) {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [matches, setMatches] = useState([]);\n  const [success, setSuccess] = useState(\"\");\n  const [isScoring, setIsScoring] = useState(false);\n  const [match, setMatch] = useState({});\n  const [home11s, setHome11s] = useState([]);\n  const [away11s, setAway11s] = useState([]);\n  const [isLive, setIsLive] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(userData.isAdmin);\n  const [home11Scores, setHome11Scores] = useState({});\n  const [away11Scores, setAway11Scores] = useState({});\n  let homePts = [];\n  let awayPts = [];\n\n  const fetchMatches = async () => {\n    let res = await APIService.getAllMatches();\n    return res;\n  };\n\n  const fetchLiveStatus = async () => {\n    let res = await APIService.getLiveStatus();\n    return res;\n  };\n\n  useEffect(() => {\n    fetchMatches().then((res) => {\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        setIsLoading(false);\n        return\n      }\n      setMatches(res.data.matches);\n    }).catch(e=>{\n      setError(\"Something Went Wrong\");\n      setIsLoading(false);\n    });\n\n    setIsLoading(false);\n  }, [isScoring]);\n\n  const toggleLive = async (match) => {\n    setIsLoading(true);\n    try {\n      let res = await APIService.toggleLive(match._id);\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        setTimeout(() => {\n          setError(\"\")\n        }, 5000);\n        setIsLoading(false);\n        return\n      }\n      setSuccess(res.data.message);\n      fetchMatches().then((res) => {\n        if (res.data.status !== 200) {\n          setError(res.data.message);\n          setTimeout(() => {\n            setError(\"\")}, 5000);\n          setIsLoading(false);\n          return\n        }\n        setMatches(res.data.matches);\n        setTimeout(()=>{setSuccess(\"\")}, 5000);\n        setIsLoading(false);\n      }).catch(e=>{\n        setError(\"Something Went Wrong\");\n        setIsLoading(false);\n      });\n    } catch (e) {\n      setError(\"Something Went Wrong\");\n      setTimeout(() => {setError(\"\")}, 5000);\n      setIsLoading(false);\n    }\n  };\n\n  const gotToScoring = async (match) => {\n    setIsLoading(true);\n    try {\n      let res = await APIService.getTeamPlayers(match.homeTeam);\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        setTimeout(() => {\n          setError(\"\")\n        }, 5000);\n        setIsLoading(false);\n        return\n      }\n      setHome11s(res.data.data);\n      homePts = new Array(res.data.data.length).fill(0);\n\n      res = await APIService.getTeamPlayers(match.awayTeam);\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        setTimeout(() => {\n          setError(\"\")\n        }, 5000);\n        setIsLoading(false);\n        return\n      }\n      setIsScoring(true);\n      setAway11s(res.data.data);\n      awayPts = new Array(res.data.data.length).fill(0);\n\n      setMatch(match);\n\n      res = await APIService.getMatchScores(match._id, match.homeTeam, match.awayTeam);\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        setTimeout(() => {\n          setError(\"\")\n        }, 5000);\n        setIsLoading(false);\n        return\n      }\n      setHome11Scores(res.data.homePts);\n      setAway11Scores(res.data.awayPts);\n      setIsLoading(false);\n    } catch (e) {\n      setError(\"Something Went Wrong\");\n      setTimeout(() => {setError(\"\")}, 5000);\n      setIsLoading(false);\n    }\n  };\n\n  const simulate = async (match) => {\n    setIsLoading(true);\n    try {\n      let res = await APIService.simulate(match._id);\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        setTimeout(() => {\n          setError(\"\")\n        }, 5000);\n        setIsLoading(false);\n        return\n      }\n      setSuccess(res.data.message);\n      setTimeout(()=>{setSuccess(\"\")}, 5000);\n\n      fetchMatches().then((res) => {\n        if (res.data.status !== 200) {\n          setError(res.data.message);\n          setIsLoading(false);\n          return\n        }\n        setMatches(res.data.matches);\n        setIsLoading(false);\n      }).catch(e => {\n        setError(\"Something Went Wrong\");\n        setTimeout(() => {setError(\"\")}, 5000);\n        setIsLoading(false);\n      });\n    } catch (e) {\n      setError(\"Something Went Wrong\");\n      setTimeout(() => {setError(\"\")}, 5000);\n      setIsLoading(false);\n    }\n  };\n\n  const undoSimulate = async (match) => {\n    setIsLoading(true);\n    try {\n      let res = await APIService.undoSimulate(match._id);\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        setTimeout(() => {\n          setError(\"\")\n        }, 5000);\n        setIsLoading(false);\n        return\n      }\n      setSuccess(res.data.message);\n      setTimeout(()=>{setSuccess(\"\")}, 5000);\n\n      fetchMatches().then((res) => {\n        if (res.data.status !== 200) {\n          setError(res.data.message);\n          setTimeout(() => {setError(\"\")}, 5000);\n          setIsLoading(false);\n          return\n        }\n        setMatches(res.data.matches);\n      }).catch(e => {\n        setError(\"Something Went Wrong\");\n        setTimeout(() => {setError(\"\")}, 5000);\n        setIsLoading(false);\n      });\n      setIsLoading(false);\n    } catch (e) {\n      setError(\"Something Went Wrong\");\n      setTimeout(() => {setError(\"\")}, 5000);\n      setIsLoading(false);\n    }\n  };\n\n  const addScoreForMatch = async () => {\n    let players = [... home11s, ...away11s];\n    let pts = [...homePts, ...awayPts];\n    setIsLoading(true);\n    try {\n      let res = await APIService.updateMatchScores(match._id, players, pts);\n      if (res.data.status !== 200) {\n        setError(res.data.message);\n        setTimeout(() => {\n          setError(\"\")\n        }, 5000);\n        return\n      }\n      setSuccess(res.data.message);\n      setIsScoring(false);\n      setTimeout(() => {\n        setSuccess(\"\")\n      }, 5000);\n      setIsLoading(false)\n    } catch(e) {\n      setError(\"Something Went Wrong\");\n      setTimeout(() => {setError(\"\")}, 5000);\n      setIsLoading(false)\n    }\n  };\n\n\n  return (\n    !isScoring ?\n      <>\n        <Card className={classes.table}>\n          <CardContent>\n            <Typography variant={'h1'} className={classes.title}>\n              Matches\n            </Typography>\n            <br/>\n            {error.length !== 0 &&\n            <Typography variant={'h6'} className={classes.error}>\n              {error}\n            </Typography>\n            }\n\n            {success.length !== 0 &&\n            <Typography variant={'h6'} className={classes.success} >\n              {success}\n            </Typography>\n            }\n\n            {isLoading && <div style={{width: \"100%\", height:\"100%\", display: \"flex\",\n              justifyContent: \"center\", alignItems : \"center\"\n            }}><Loader\n              type=\"ThreeDots\"\n              color=\"#536DFE\"\n              height={50}\n              width={50}/></div>}\n\n            <br/><br/><br/>\n\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <StyledTableRow>\n                    <StyledTableCell>MatchNo</StyledTableCell>\n                    <StyledTableCell>Home</StyledTableCell>\n                    <StyledTableCell>Away</StyledTableCell>\n                    {isAdmin ? <>\n                    <StyledTableCell>SetLive</StyledTableCell>\n                    <StyledTableCell>AddScore</StyledTableCell>\n                    <StyledTableCell>Simulate</StyledTableCell>\n                    </> :  <StyledTableCell>View Score</StyledTableCell>\n                    }\n                  </StyledTableRow>\n                </TableHead>\n                <TableBody stripedRows>\n                  {matches.map((match) => (\n                    <StyledTableRow key={match.match._id}>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {match.match.matchNo}\n                      </StyledTableCell>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {match.match.homeTeam}\n                      </StyledTableCell>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {match.match.awayTeam}\n                      </StyledTableCell>\n\n                      {isAdmin ? <>\n                        <StyledTableCell align=\"center\">\n                          <Switch\n                            checked={match.match.isLive}\n                            onChange={() => toggleLive(match.match)}\n                            color=\"primary\"\n                          />\n                        </StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                          <Button disabled={!match.match.isLive || match.match.isSimulated} variant={\"contained\"}\n                                  onClick={() => gotToScoring(match.match)} color=\"primary\">\n                            {match.scored && \"Edit Scores\"}\n                            {!match.scored && \"Add Scores\"}\n                          </Button>\n                        </StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                          <Button disabled={!match.scored} variant={\"contained\"}\n                                  onClick={!match.match.isSimulated ?\n                                    () => simulate(match.match) : () => undoSimulate(match.match)\n                                  } color=\"primary\">\n                            {!match.match.isSimulated && \"Simulate\"}\n                            {match.match.isSimulated && \"Undo Simulation\"}\n                          </Button>\n                        </StyledTableCell>\n                      </> : <StyledTableCell align=\"center\">\n                        <Button disabled={!match.scored} variant={\"contained\"}\n                                onClick={() => gotToScoring(match.match)} color=\"primary\">\n                          View Scores\n                        </Button>\n                      </StyledTableCell>\n                      }\n                    </StyledTableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </CardContent>\n        </Card>\n      </> :\n      <>\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography variant={'h1'} className={classes.title}>\n              ScoreCard for Match No {match.matchNo}\n            </Typography>\n            <br/>\n            {error.length !== 0 &&\n            <Typography variant={'h6'} className={classes.error}>\n              {error}\n            </Typography>\n            }\n            <div className={classes.formInputs}>\n              <Typography variant={'h1'} className={classes.title}>\n                {match.homeTeam}\n              </Typography>\n              <Typography variant={'h1'} className={classes.title}>\n                V S\n              </Typography>\n              <Typography variant={'h1'} className={classes.title}>\n                {match.awayTeam}\n              </Typography>\n            </div>\n            {success.length !== 0 &&\n            <Typography variant={'h6'} className={classes.success} >\n              {success}\n            </Typography>\n            }\n          </CardContent>\n        </Card>\n\n        <br/><br/><br/>\n        <Card className={classes.table}>\n          <CardContent>\n            <div className={classes.teamsBox}>\n              <div className={classes.homeBox}>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <StyledTableRow>\n                        <StyledTableCell>Player Name</StyledTableCell>\n                        <StyledTableCell>Points</StyledTableCell>\n                      </StyledTableRow>\n                    </TableHead>\n                    <TableBody stripedRows>\n                      {home11s.map((player,key) => (\n                        <StyledTableRow key={player.name}>\n                          <StyledTableCell component=\"th\" scope=\"row\">\n                            {player.name}\n                          </StyledTableCell>\n                          <StyledTableCell align=\"center\">\n                            {isAdmin ?\n                              <TextField id=\"outlined-basic\" label=\"Points\"\n                                         onChange={e => {\n                                           homePts[key] = e.target.value;\n                                         }}\n                                         className={classes.name}/> :\n                              home11Scores[player._id]\n                            }\n                          </StyledTableCell>\n                        </StyledTableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </div>\n\n              <div className={classes.awayBox}>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <StyledTableRow>\n                        <StyledTableCell>Player Name</StyledTableCell>\n                        <StyledTableCell>Total Points</StyledTableCell>\n                      </StyledTableRow>\n                    </TableHead>\n                    <TableBody stripedRows>\n                      {away11s.map((player, key) => (\n                        <StyledTableRow key={player.name}>\n                          <StyledTableCell component=\"th\" scope=\"row\">\n                            {player.name}\n                          </StyledTableCell>\n                          <StyledTableCell align=\"center\">\n                            {isAdmin ?\n                              <TextField id=\"outlined-basic\" label=\"Points\"\n                                         onChange={e => {\n                                           awayPts[key] = e.target.value;\n                                         }}\n                                         className={classes.name}/> :\n                              away11Scores[player._id]\n                            }\n                          </StyledTableCell>\n                        </StyledTableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        {isAdmin && <Button disabled={isLoading} onClick={() => addScoreForMatch()} className={classes.button} variant={\"contained\"} color=\"primary\">ADD</Button>}\n\n      </>\n  )}\n\n","/home/diprivi/delta/sosaIPL/frontend/src/pages/AddPlayer/AddPlayer.js",["304"],"import React, { useState } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport APIService from \"../../apiservice\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  formInputs : {\n    display : \"flex\",\n    justifyContent : \"space-around\",\n    alignItems : \"baseline\",\n  },\n  selector : {\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  name : {\n    height : \"80%\",\n    width: \"30%\",\n    margin: \"10px\",\n  },\n  button : {\n    marginLeft: \"10px !important\"\n  },\n  success : {\n    textAlign: \"center\",\n    color:\"green\"\n  },\n  error : {\n    textAlign: \"center\",\n    color:\"red\"\n  }\n}));\n\n\nexport function AddPlayer () {\n  const classes = useStyles();\n  const [playerName, setPlayerName] = useState(\"\");\n  const [teamName, setTeamName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const handleAddPlayer = async () => {\n    setIsLoading(true);\n    try {\n      let res = await APIService.addPlayer(playerName, teamName);\n      if(res.data.status !== 200){\n        setError(res.data.message);\n        setIsLoading(false);\n        setTimeout(()=>{setError(\"\")}, 5000);\n        return\n      }\n      setSuccess(res.data.message);\n      setIsLoading(false);\n      setTimeout(()=>{setSuccess(\"\")}, 5000);\n    } catch (e) {\n      console.log(e);\n      setError(\"Something Went Wrong\");\n      setTimeout(()=>{setError(\"\")}, 5000);\n    }\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant={'h1'} className={classes.title}>\n          Add Player\n        </Typography>\n        <br/>\n        {error.length !== 0 &&\n        <Typography variant={'h6'} className={classes.error}>\n          {error}\n        </Typography>\n        }\n        <div className={classes.formInputs}>\n          <TextField id=\"outlined-basic\" label=\"Player Name\"\n          className={classes.name} onChange={(e)=>{setPlayerName(e.target.value)}}/>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            onChange={(e)=>{setTeamName(e.target.value)}}\n            label=\"Team Name\"\n            className={classes.selector}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={\"CSK\"}>CSK</MenuItem>\n            <MenuItem value={\"RCB\"}>RCB</MenuItem>\n            <MenuItem value={\"MI\"}>MI</MenuItem>\n            <MenuItem value={\"KKR\"}>KKR</MenuItem>\n            <MenuItem value={\"SRH\"}>SRH</MenuItem>\n            <MenuItem value={\"DC\"}>DC</MenuItem>\n            <MenuItem value={\"RR\"}>RR</MenuItem>\n            <MenuItem value={\"KXIP\"}>KXIP</MenuItem>\n          </Select>\n          <Button disabled={isLoading} onClick={handleAddPlayer} className={\"button\"} variant={\"contained\"} color=\"primary\">ADD</Button>\n        </div>\n        {success.length !== 0 &&\n        <Typography variant={'h6'} className={classes.success} >\n          {success}\n        </Typography>\n        }\n      </CardContent>\n    </Card>\n  )\n}","/home/diprivi/delta/sosaIPL/frontend/src/components/Layout/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/charts/Charts.js",[],["305","306"],"/home/diprivi/delta/sosaIPL/frontend/src/pages/icons/Icons.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/tables/Tables.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/maps/Maps.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/notifications/Notifications.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/typography/Typography.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/Dashboard.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/Sidebar.js",["307","308","309","310","311","312","313","314","315"],"/home/diprivi/delta/sosaIPL/frontend/src/components/Header/Header.js",["316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\nimport {useHistory} from 'react-router-dom'\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n  var history = useHistory();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          SportsFete Fantasy\n        </Typography>\n        <div className={classes.grow} />\n        <div className={classes.profileMenuUser}>\n          <Typography\n            className={classes.profileMenuLink}\n            color=\"white\"\n            onClick={() => {\n              localStorage.setItem(\"session\", undefined);\n              window.location.href = \"/\";\n            }}\n          >\n            Sign Out\n          </Typography>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/mock.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/charts/components/ApexHeatmap.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/charts/components/ApexLineChart.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Header/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/components/Dot.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/components/Table/Table.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/components/BigStat/BigStat.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/typography/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/notifications/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/maps/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/PageTitle/PageTitle.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Widget/Widget.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/icons/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Wrappers/Wrappers.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/UserAvatar/UserAvatar.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Notification/Notification.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Sidebar/components/SidebarLink/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/pages/dashboard/components/BigStat/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/PageTitle/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Widget/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/Notification/styles.js",[],"/home/diprivi/delta/sosaIPL/frontend/src/components/UserAvatar/styles.js",[],{"ruleId":"347","severity":1,"message":"348","line":8,"column":13,"nodeType":"349","messageId":"350","endLine":8,"endColumn":26},{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","replacedBy":"354"},{"ruleId":"347","severity":1,"message":"355","line":14,"column":8,"nodeType":"349","messageId":"350","endLine":14,"endColumn":18},{"ruleId":"347","severity":1,"message":"356","line":35,"column":9,"nodeType":"349","messageId":"350","endLine":35,"endColumn":12},{"ruleId":"357","severity":1,"message":"358","line":48,"column":6,"nodeType":"359","endLine":48,"endColumn":8,"suggestions":"360"},{"ruleId":"347","severity":1,"message":"361","line":25,"column":8,"nodeType":"349","messageId":"350","endLine":25,"endColumn":18},{"ruleId":"347","severity":1,"message":"362","line":10,"column":8,"nodeType":"349","messageId":"350","endLine":10,"endColumn":12},{"ruleId":"347","severity":1,"message":"363","line":12,"column":10,"nodeType":"349","messageId":"350","endLine":12,"endColumn":18},{"ruleId":"347","severity":1,"message":"364","line":13,"column":8,"nodeType":"349","messageId":"350","endLine":13,"endColumn":18},{"ruleId":"347","severity":1,"message":"362","line":19,"column":8,"nodeType":"349","messageId":"350","endLine":19,"endColumn":12},{"ruleId":"347","severity":1,"message":"365","line":20,"column":8,"nodeType":"349","messageId":"350","endLine":20,"endColumn":14},{"ruleId":"347","severity":1,"message":"366","line":25,"column":8,"nodeType":"349","messageId":"350","endLine":25,"endColumn":18},{"ruleId":"347","severity":1,"message":"367","line":26,"column":10,"nodeType":"349","messageId":"350","endLine":26,"endColumn":20},{"ruleId":"347","severity":1,"message":"368","line":39,"column":8,"nodeType":"349","messageId":"350","endLine":39,"endColumn":17},{"ruleId":"347","severity":1,"message":"369","line":39,"column":19,"nodeType":"349","messageId":"350","endLine":39,"endColumn":31},{"ruleId":"347","severity":1,"message":"370","line":42,"column":10,"nodeType":"349","messageId":"350","endLine":42,"endColumn":20},{"ruleId":"347","severity":1,"message":"371","line":4,"column":8,"nodeType":"349","messageId":"350","endLine":4,"endColumn":19},{"ruleId":"347","severity":1,"message":"372","line":7,"column":8,"nodeType":"349","messageId":"350","endLine":7,"endColumn":14},{"ruleId":"347","severity":1,"message":"373","line":8,"column":8,"nodeType":"349","messageId":"350","endLine":8,"endColumn":17},{"ruleId":"347","severity":1,"message":"374","line":9,"column":8,"nodeType":"349","messageId":"350","endLine":9,"endColumn":14},{"ruleId":"347","severity":1,"message":"375","line":10,"column":8,"nodeType":"349","messageId":"350","endLine":10,"endColumn":16},{"ruleId":"347","severity":1,"message":"376","line":20,"column":8,"nodeType":"349","messageId":"350","endLine":20,"endColumn":16},{"ruleId":"347","severity":1,"message":"377","line":120,"column":19,"nodeType":"349","messageId":"350","endLine":120,"endColumn":29},{"ruleId":"347","severity":1,"message":"378","line":121,"column":10,"nodeType":"349","messageId":"350","endLine":121,"endColumn":17},{"ruleId":"347","severity":1,"message":"379","line":121,"column":19,"nodeType":"349","messageId":"350","endLine":121,"endColumn":29},{"ruleId":"347","severity":1,"message":"380","line":122,"column":10,"nodeType":"349","messageId":"350","endLine":122,"endColumn":16},{"ruleId":"347","severity":1,"message":"381","line":122,"column":18,"nodeType":"349","messageId":"350","endLine":122,"endColumn":27},{"ruleId":"347","severity":1,"message":"382","line":123,"column":10,"nodeType":"349","messageId":"350","endLine":123,"endColumn":17},{"ruleId":"347","severity":1,"message":"383","line":123,"column":19,"nodeType":"349","messageId":"350","endLine":123,"endColumn":29},{"ruleId":"384","severity":1,"message":"385","line":139,"column":5,"nodeType":"386","messageId":"387","endLine":148,"endColumn":14,"fix":"388"},{"ruleId":"347","severity":1,"message":"371","line":4,"column":8,"nodeType":"349","messageId":"350","endLine":4,"endColumn":19},{"ruleId":"347","severity":1,"message":"373","line":8,"column":8,"nodeType":"349","messageId":"350","endLine":8,"endColumn":17},{"ruleId":"347","severity":1,"message":"389","line":21,"column":8,"nodeType":"349","messageId":"350","endLine":21,"endColumn":18},{"ruleId":"347","severity":1,"message":"380","line":119,"column":10,"nodeType":"349","messageId":"350","endLine":119,"endColumn":16},{"ruleId":"347","severity":1,"message":"381","line":119,"column":18,"nodeType":"349","messageId":"350","endLine":119,"endColumn":27},{"ruleId":"347","severity":1,"message":"390","line":122,"column":18,"nodeType":"349","messageId":"350","endLine":122,"endColumn":27},{"ruleId":"384","severity":1,"message":"385","line":150,"column":5,"nodeType":"386","messageId":"387","endLine":172,"endColumn":14,"fix":"391"},{"ruleId":"357","severity":1,"message":"392","line":176,"column":6,"nodeType":"359","endLine":176,"endColumn":13,"suggestions":"393"},{"ruleId":"384","severity":1,"message":"385","line":210,"column":7,"nodeType":"386","messageId":"387","endLine":219,"endColumn":16,"fix":"394"},{"ruleId":"357","severity":1,"message":"395","line":224,"column":5,"nodeType":"359","endLine":224,"endColumn":7,"suggestions":"396"},{"ruleId":"347","severity":1,"message":"371","line":4,"column":8,"nodeType":"349","messageId":"350","endLine":4,"endColumn":19},{"ruleId":"347","severity":1,"message":"397","line":120,"column":10,"nodeType":"349","messageId":"350","endLine":120,"endColumn":15},{"ruleId":"347","severity":1,"message":"398","line":120,"column":17,"nodeType":"349","messageId":"350","endLine":120,"endColumn":25},{"ruleId":"357","severity":1,"message":"399","line":136,"column":6,"nodeType":"359","endLine":136,"endColumn":15,"suggestions":"400"},{"ruleId":"384","severity":1,"message":"385","line":156,"column":5,"nodeType":"386","messageId":"387","endLine":171,"endColumn":14,"fix":"401"},{"ruleId":"357","severity":1,"message":"402","line":176,"column":6,"nodeType":"359","endLine":176,"endColumn":15,"suggestions":"403"},{"ruleId":"347","severity":1,"message":"371","line":4,"column":8,"nodeType":"349","messageId":"350","endLine":4,"endColumn":19},{"ruleId":"347","severity":1,"message":"404","line":12,"column":8,"nodeType":"349","messageId":"350","endLine":12,"endColumn":22},{"ruleId":"347","severity":1,"message":"405","line":13,"column":8,"nodeType":"349","messageId":"350","endLine":13,"endColumn":13},{"ruleId":"347","severity":1,"message":"406","line":14,"column":8,"nodeType":"349","messageId":"350","endLine":14,"endColumn":17},{"ruleId":"347","severity":1,"message":"407","line":17,"column":8,"nodeType":"349","messageId":"350","endLine":17,"endColumn":17},{"ruleId":"347","severity":1,"message":"408","line":18,"column":8,"nodeType":"349","messageId":"350","endLine":18,"endColumn":13},{"ruleId":"347","severity":1,"message":"376","line":20,"column":8,"nodeType":"349","messageId":"350","endLine":20,"endColumn":16},{"ruleId":"347","severity":1,"message":"409","line":23,"column":7,"nodeType":"349","messageId":"350","endLine":23,"endColumn":21},{"ruleId":"347","severity":1,"message":"410","line":31,"column":7,"nodeType":"349","messageId":"350","endLine":31,"endColumn":22},{"ruleId":"347","severity":1,"message":"411","line":119,"column":10,"nodeType":"349","messageId":"350","endLine":119,"endColumn":19},{"ruleId":"347","severity":1,"message":"412","line":120,"column":10,"nodeType":"349","messageId":"350","endLine":120,"endColumn":19},{"ruleId":"347","severity":1,"message":"413","line":183,"column":9,"nodeType":"349","messageId":"350","endLine":183,"endColumn":25},{"ruleId":"347","severity":1,"message":"414","line":195,"column":9,"nodeType":"349","messageId":"350","endLine":195,"endColumn":25},{"ruleId":"347","severity":1,"message":"371","line":4,"column":8,"nodeType":"349","messageId":"350","endLine":4,"endColumn":19},{"ruleId":"347","severity":1,"message":"374","line":9,"column":8,"nodeType":"349","messageId":"350","endLine":9,"endColumn":14},{"ruleId":"347","severity":1,"message":"375","line":10,"column":8,"nodeType":"349","messageId":"350","endLine":10,"endColumn":16},{"ruleId":"347","severity":1,"message":"376","line":20,"column":8,"nodeType":"349","messageId":"350","endLine":20,"endColumn":16},{"ruleId":"347","severity":1,"message":"415","line":123,"column":10,"nodeType":"349","messageId":"350","endLine":123,"endColumn":16},{"ruleId":"347","severity":1,"message":"390","line":123,"column":18,"nodeType":"349","messageId":"350","endLine":123,"endColumn":27},{"ruleId":"347","severity":1,"message":"416","line":124,"column":19,"nodeType":"349","messageId":"350","endLine":124,"endColumn":29},{"ruleId":"347","severity":1,"message":"417","line":135,"column":9,"nodeType":"349","messageId":"350","endLine":135,"endColumn":24},{"ruleId":"418","severity":1,"message":"419","line":312,"column":23,"nodeType":"420","messageId":"387","endLine":312,"endColumn":24,"fix":"421"},{"ruleId":"347","severity":1,"message":"371","line":4,"column":8,"nodeType":"349","messageId":"350","endLine":4,"endColumn":19},{"ruleId":"351","replacedBy":"422"},{"ruleId":"353","replacedBy":"423"},{"ruleId":"347","severity":1,"message":"424","line":4,"column":11,"nodeType":"349","messageId":"350","endLine":4,"endColumn":19},{"ruleId":"347","severity":1,"message":"425","line":5,"column":24,"nodeType":"349","messageId":"350","endLine":5,"endColumn":41},{"ruleId":"347","severity":1,"message":"426","line":6,"column":17,"nodeType":"349","messageId":"350","endLine":6,"endColumn":31},{"ruleId":"347","severity":1,"message":"427","line":7,"column":17,"nodeType":"349","messageId":"350","endLine":7,"endColumn":31},{"ruleId":"347","severity":1,"message":"428","line":8,"column":16,"nodeType":"349","messageId":"350","endLine":8,"endColumn":25},{"ruleId":"347","severity":1,"message":"429","line":9,"column":21,"nodeType":"349","messageId":"350","endLine":9,"endColumn":32},{"ruleId":"347","severity":1,"message":"430","line":10,"column":19,"nodeType":"349","messageId":"350","endLine":10,"endColumn":30},{"ruleId":"347","severity":1,"message":"431","line":11,"column":18,"nodeType":"349","messageId":"350","endLine":11,"endColumn":25},{"ruleId":"347","severity":1,"message":"432","line":23,"column":8,"nodeType":"349","messageId":"350","endLine":23,"endColumn":11},{"ruleId":"347","severity":1,"message":"433","line":6,"column":3,"nodeType":"349","messageId":"350","endLine":6,"endColumn":12},{"ruleId":"347","severity":1,"message":"434","line":7,"column":3,"nodeType":"349","messageId":"350","endLine":7,"endColumn":7},{"ruleId":"347","severity":1,"message":"375","line":8,"column":3,"nodeType":"349","messageId":"350","endLine":8,"endColumn":11},{"ruleId":"347","severity":1,"message":"435","line":9,"column":3,"nodeType":"349","messageId":"350","endLine":9,"endColumn":6},{"ruleId":"347","severity":1,"message":"436","line":10,"column":3,"nodeType":"349","messageId":"350","endLine":10,"endColumn":7},{"ruleId":"347","severity":1,"message":"437","line":14,"column":18,"nodeType":"349","messageId":"350","endLine":14,"endColumn":26},{"ruleId":"347","severity":1,"message":"425","line":15,"column":24,"nodeType":"349","messageId":"350","endLine":15,"endColumn":41},{"ruleId":"347","severity":1,"message":"438","line":16,"column":13,"nodeType":"349","messageId":"350","endLine":16,"endColumn":24},{"ruleId":"347","severity":1,"message":"439","line":17,"column":13,"nodeType":"349","messageId":"350","endLine":17,"endColumn":23},{"ruleId":"347","severity":1,"message":"440","line":18,"column":11,"nodeType":"349","messageId":"350","endLine":18,"endColumn":19},{"ruleId":"347","severity":1,"message":"441","line":27,"column":10,"nodeType":"349","messageId":"350","endLine":27,"endColumn":15},{"ruleId":"347","severity":1,"message":"372","line":27,"column":29,"nodeType":"349","messageId":"350","endLine":27,"endColumn":35},{"ruleId":"347","severity":1,"message":"442","line":28,"column":8,"nodeType":"349","messageId":"350","endLine":28,"endColumn":20},{"ruleId":"347","severity":1,"message":"443","line":29,"column":8,"nodeType":"349","messageId":"350","endLine":29,"endColumn":18},{"ruleId":"347","severity":1,"message":"444","line":38,"column":27,"nodeType":"349","messageId":"350","endLine":38,"endColumn":34},{"ruleId":"347","severity":1,"message":"445","line":40,"column":7,"nodeType":"349","messageId":"350","endLine":40,"endColumn":15},{"ruleId":"347","severity":1,"message":"446","line":71,"column":7,"nodeType":"349","messageId":"350","endLine":71,"endColumn":20},{"ruleId":"347","severity":1,"message":"447","line":95,"column":7,"nodeType":"349","messageId":"350","endLine":95,"endColumn":14},{"ruleId":"347","severity":1,"message":"448","line":100,"column":7,"nodeType":"349","messageId":"350","endLine":100,"endColumn":19},{"ruleId":"347","severity":1,"message":"449","line":103,"column":8,"nodeType":"349","messageId":"350","endLine":103,"endColumn":16},{"ruleId":"347","severity":1,"message":"450","line":103,"column":18,"nodeType":"349","messageId":"350","endLine":103,"endColumn":29},{"ruleId":"347","severity":1,"message":"451","line":104,"column":8,"nodeType":"349","messageId":"350","endLine":104,"endColumn":21},{"ruleId":"347","severity":1,"message":"452","line":104,"column":23,"nodeType":"349","messageId":"350","endLine":104,"endColumn":39},{"ruleId":"347","severity":1,"message":"453","line":105,"column":8,"nodeType":"349","messageId":"350","endLine":105,"endColumn":25},{"ruleId":"347","severity":1,"message":"454","line":105,"column":27,"nodeType":"349","messageId":"350","endLine":105,"endColumn":47},{"ruleId":"347","severity":1,"message":"455","line":106,"column":8,"nodeType":"349","messageId":"350","endLine":106,"endColumn":29},{"ruleId":"347","severity":1,"message":"456","line":106,"column":31,"nodeType":"349","messageId":"350","endLine":106,"endColumn":55},{"ruleId":"347","severity":1,"message":"457","line":107,"column":8,"nodeType":"349","messageId":"350","endLine":107,"endColumn":19},{"ruleId":"347","severity":1,"message":"458","line":107,"column":21,"nodeType":"349","messageId":"350","endLine":107,"endColumn":35},{"ruleId":"347","severity":1,"message":"459","line":108,"column":8,"nodeType":"349","messageId":"350","endLine":108,"endColumn":20},{"ruleId":"347","severity":1,"message":"460","line":108,"column":22,"nodeType":"349","messageId":"350","endLine":108,"endColumn":35},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["461"],"no-negated-in-lhs",["462"],"'makeStyles' is defined but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSession'. Either include it or remove the dependency array.","ArrayExpression",["463"],"'Typography' is defined but never used.","'logo' is defined but never used.","'Redirect' is defined but never used.","'classnames' is defined but never used.","'google' is defined but never used.","'APIService' is defined but never used.","'useHistory' is defined but never used.","'rollValue' is assigned a value but never used.","'setRollValue' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Checkbox' is defined but never used.","'setSuccess' is assigned a value but never used.","'home11s' is assigned a value but never used.","'setHome11s' is assigned a value but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'matches' is assigned a value but never used.","'setMatches' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"464","text":"465"},"'InputLabel' is defined but never used.","'setIsLive' is assigned a value but never used.",{"range":"466","text":"465"},"React Hook useEffect has missing dependencies: 'fetchAlreadyPicked' and 'squad'. Either include them or remove the dependency array.",["467"],{"range":"468","text":"465"},"React Hook useEffect has missing dependencies: 'fetchSquadPlayers' and 'props.userData.isAdmin'. Either include them or remove the dependency array.",["469"],"'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'players'. Either include it or remove the dependency array.",["470"],{"range":"471","text":"465"},"React Hook useEffect has a missing dependency: 'home11s'. Either include it or remove the dependency array.",["472"],"'TableContainer' is defined but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableBody' is defined but never used.","'Paper' is defined but never used.","'StyledTableRow' is assigned a value but never used.","'StyledTableCell' is assigned a value but never used.","'homeSquad' is assigned a value but never used.","'awaySquad' is assigned a value but never used.","'selectAwayPlayer' is assigned a value but never used.","'selectHomePlayer' is assigned a value but never used.","'isLive' is assigned a value but never used.","'setIsAdmin' is assigned a value but never used.","'fetchLiveStatus' is assigned a value but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement",{"range":"473","text":"474"},["461"],["462"],"'HomeIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'InputBase' is defined but never used.","'Menu' is defined but never used.","'Fab' is defined but never used.","'Link' is defined but never used.","'MailIcon' is defined but never used.","'AccountIcon' is defined but never used.","'SearchIcon' is defined but never used.","'SendIcon' is defined but never used.","'Badge' is defined but never used.","'Notification' is defined but never used.","'UserAvatar' is defined but never used.","'signOut' is defined but never used.","'messages' is assigned a value but never used.","'notifications' is assigned a value but never used.","'history' is assigned a value but never used.","'userDispatch' is assigned a value but never used.","'mailMenu' is assigned a value but never used.","'setMailMenu' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'notificationsMenu' is assigned a value but never used.","'setNotificationsMenu' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'profileMenu' is assigned a value but never used.","'setProfileMenu' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"475","fix":"476"},[3562,3564],".",[4552,4554],{"desc":"477","fix":"478"},[5799,5801],{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},[4348,4350],{"desc":"483","fix":"484"},[8225,8226],"","Update the dependencies array to be: [getSession]",{"range":"485","text":"486"},"Update the dependencies array to be: [fetchAlreadyPicked, match, squad]",{"range":"487","text":"488"},"Update the dependencies array to be: [fetchSquadPlayers, props.userData.isAdmin]",{"range":"489","text":"490"},"Update the dependencies array to be: [home11s, players]",{"range":"491","text":"492"},"Update the dependencies array to be: [home11s, success]",{"range":"493","text":"494"},[1224,1226],"[getSession]",[4664,4671],"[fetchAlreadyPicked, match, squad]",[5922,5924],"[fetchSquadPlayers, props.userData.isAdmin]",[3419,3428],"[home11s, players]",[4487,4496],"[home11s, success]"]